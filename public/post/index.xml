<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on A Hugo Site</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on A Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Tue, 06 Aug 2024 10:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>影评-梨泰院Class</title>
      <link>http://localhost:1313/post/film-criticism-itaewon-class/</link>
      <pubDate>Tue, 06 Aug 2024 10:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/film-criticism-itaewon-class/</guid>
      <description>前言 平日里喜欢看各种影视剧，目前看了有500多部电影，100多部剧集，算起来也不少，但还没有写过影评记录，尝试写一些自己的感受。&#xA;剧情 这部剧集是一天看完的，剧情非常简单，男主朴世路家庭遭受财阀家族长家迫害，男主下决心准备了十几年的复仇计划，中间结识并聚集了一批知心好友。&#xA;冲突的起因其实非常常见，富二代张跟原霸凌同学，男主个性正直看不过制止，老师无动于衷，富二代再次条寻，男主遂冲动动手。麻烦的是富二代的父亲张大熙是男主父亲的老板，是长家集团的会长，会长可以放过男主，但要求男主下跪道歉，男主拒绝，男主父亲也认为儿子并没错，由此男主退学，男主父亲辞职。&#xA;下跪道歉贯穿整个剧集，不明白为什么非要下跪再道歉，是为侮辱人？或是通过下跪这个动作，划清身份地位，从而更好地操控别人？&#xA;本来男主的生活到这里都还好，平日和父亲还有父亲资助的一个同学，也就是女二吴秀娥平凡地生活着，没事吃个火锅唱个歌。但是不出意外就要出意外了。富二代开车撞了男主父亲并逃逸，导致男主父亲身亡，事后又找人顶罪，男主知道后找到富二代，差点将其打死，而女二报警和警察制止了男主，男主入狱，这里会长再次出现，向男主说明可以给他第二次机会，同样要求男主下跪道歉，男主非常生气，再次拒绝。与此同时会长言语暗示女二，要求其不要把富二代是车主的事情暴露，可以资助其上大学，女二理解成做有利于富二代的伪证，会长买通警局高层直接结案，男主坐牢，女二上大学。&#xA;而被富二代霸凌的同学李虎镇则是找到男主，二者达成一致，要扳倒长家，李虎镇作为其财务专家帮忙。男主出狱后打了几年苦功，攒到第一桶金，在梨泰院开了一家小酒馆，随后遇到天才少女女主赵以瑞，虽说是少女，也20岁了。在女主的帮助及一众店员的努力下，最终收购了长家。&#xA;这部剧比较杂，有复仇元素，但并不像《黑暗荣耀》单纯复仇，有爱情元素，但是男女主到最后才在一起，有商战元素，但显得有些单纯。单纯说一点，男主被地产大亨看重，一家小酒馆，拿到了100亿韩元也就是5000万人民币的投资，只能说有点离谱。&#xA;人物分析 朴世路 男一号，总的来说，男主在剧集中的人设比较简单，正直，设定目标就坚定向前，不肯向别人低头。剧情中有一幕是女主要求男主低头一次，就可以免被停业，而男主则认为一次低头就会次次低头，到最后就会变成另一个人；另外一个场景是和长家女股东交谈的时候谈到自己的理想，简单概括：不被人左右。这两个场景在我看来能非常凸显男主的个性，他也贯彻到底，并且也感染了身边的人（刀疤哥），但是其在剧集中复仇的表现实在一般。&#xA;整部剧集中，男主都是靠着正直善良（有的人可能会说圣母），信任，靠着“人”，实现复仇，在我看来这样的经历并不“爽”，有种主角光环的感觉。比如最开始甜栗的厨师厨艺还没男主好，但是给他双倍工资能在电视节目中拿第一，并且说是全国第一，韩餐也没这么好做把。&#xA;虽然他的经历存在一些BUG，但男主说是人定胜天、努力一定会有收获的良好案例。&#xA;赵以瑞 女一号，高中时期就是拥有数十万粉丝的美食博主，同样面对霸凌，男主用暴力解决问题，导致退学，而她则是录下视频，利用其优势曝光，并录下霸凌者母亲威胁自己的视频保护自己，这样的做法确实聪明有效。和开头男主的做法形成对比，女主可以游刃有余地处理面对的问题，她可以进入好的大学，找到好的工作，但同时她自身又深陷虚无，觉得这些可以预见的未来毫无意义，还想象如果不出生是不是更好，这些思想我认为更能引起共鸣，在当今内卷严重的环境下，人从出生到工作，一直主动或被迫与他人竞争，失去了生活的乐趣。&#xA;因此当她遇到并喜欢上男主后，她的生活有了目标，简单来说就是事业爱情两手都要抓，两手都要硬，因为她没输过，结局也是这样，虽然道路比较曲折，但是仍是螺旋式上升的。&#xA;女主的刻画是比较成功的，个性鲜明，敢于追求，就像赵敏的“我偏要勉强”。与此同时她又是为了帮助男主而毫不犹豫利用别人感情（张跟秀），有一幕是跟张跟秀道歉，金多美也将女主那种瞬间转换情绪，看似亲密但是实则有距离演的非常生动。&#xA;最后是刻画相对疑惑的点，一是为什么要可以强调女主一直不认为黑人小哥是韩国人，这里是为了刻画女主固执或是什么？二是后期女主拼命工作只是希望让男主以为自己是非常有用的，有点破坏女主塑造的形象。&#xA;吴秀娥 女二的戏份据说相比漫画增加了不少，而女二在剧中的形象也相对丰满，但存在一些矛盾。从小时候不希望被人施舍，到大学需要自己独立生存，她做出的决定仅仅是为了对自己好一点，这一形象刻画的较好。&#xA;她的处境可以说是非常矛盾的，撞死自己半个父亲，掩盖真相的人偏偏要资助自己，她的整个生活充满了撕裂感。她在梨泰院和男主相遇的场景让人觉得她忘记了过去，她应该有矛盾和痛苦，不仅仅是因为她喜欢男主而男主和自己的公司是敌人，而是如果她将男主父亲看作半个爸爸，她对长家的感情应该更复杂，而剧集的刻画并没有那种让人一看就知道你是在长家的卧底，你很不容易的形象。&#xA;她的生活和家庭决定了她不能像女主一样果断，正如她对男主说的，你是像会拖累别人的人，所以她一开始并没有和男主在一起，她在矛盾中日复一日地”什么也没做“，从刚开始的男主喜欢她会直接明说，到最后男主说不出口，这样的结局是注定的。&#xA;其他人物 其他人物的刻画有优有劣，如张大熙会长虽然看似可恨，但也有其值得敬佩学习的一面，到最后貌似疯了，只是为了让男主下跪。黑人小哥有点工具人属性，和变性人厨师一样，有点政治正确的意味，刀疤哥的刻画的较好，男二后面黑化有点莫名其妙的，动机不足，其他角色就不一一列举了。&#xA;总结 剧情虽然并不是基督山伯爵那种复仇爽剧，但是也值得一看，总结几个印象深刻的情节：&#xA;刀疤哥出狱后和男主第一次见面就折服与他，两个人过了相同的时间，一个人仍是混混打手，另一个则在梨泰院开了自己的酒馆，差距明显，这也警醒我们要相信自己，不要浪费自己的人生。 男二因为女主的话决定接管长家，他将女主的话当成了自己的目标，这种没有目标，不争不抢的性格仿佛看到了自己。 总的来说剧中女主的表现不负期待，剧情硬伤没必要细究，中规中矩的剧集。</description>
    </item>
    <item>
      <title>RSS一站式指南</title>
      <link>http://localhost:1313/post/rss-tutorial/</link>
      <pubDate>Wed, 31 Jul 2024 11:01:43 +0000</pubDate>
      <guid>http://localhost:1313/post/rss-tutorial/</guid>
      <description>前言 Google Reader 在 2013 年的下线似乎标志着 RSS 黄金时代的结束。在那之后，虽然陆续出现过很多替代品，但 RSS 的地位已经被无限刷新的信息流、算法推荐等新技术逐渐取代了(来自少数派文章)。&#xA;虽然 RSS 服务对用户要求较高，逐渐被各种各样的平台替代，但其信息来源灵活，对有一定动手能力的用户的来说利大于弊。因此本文记录自建 RSS 源获取、管理工具的流程，免得后续忘记需要重新翻找文档。&#xA;RSSHub 首先是 RSS 订阅获取，这里推荐著名的 RSSHub，GitHub 地址如下：&#xA;{% ghcard DIYgod/RSSHub, theme=onedark %}&#xA;详细的说明可以在项目文档找到，下面是服务器部署的方式：&#xA;version: &amp;#34;3.9&amp;#34; services: rsshub: # two ways to enable puppeteer: # * comment out marked lines, then use this image instead: diygod/rsshub:chromium-bundled # * (consumes more disk space and memory) leave everything unchanged image: diygod/rsshub restart: always ports: - 1200:1200 environment: NODE_ENV: production CACHE_TYPE: redis REDIS_URL: redis://redis:6379/ PUPPETEER_WS_ENDPOINT: ws://browserless:3000 # marked # ACCESS_KEY: password # 访问限制密钥 depends_on: - redis - browserless # marked browserless: # marked image: browserless/chrome # marked restart: always # marked ulimits: # marked core: # marked hard: 0 # marked soft: 0 # marked redis: image: redis:alpine restart: always volumes: - redis-data:/data volumes: redis-data: null networks: {} 个人建议在配置中写入访问限制设置，以免别人盗用你的地址，将 ACCESS_KEY 后替换为自己的密码即可。</description>
    </item>
    <item>
      <title>Terminus答案</title>
      <link>http://localhost:1313/post/terminus-emby/</link>
      <pubDate>Wed, 24 Jul 2024 19:06:29 +0000</pubDate>
      <guid>http://localhost:1313/post/terminus-emby/</guid>
      <description>a 代表✅ e 代表❌&#xA;window.QAA=[{ &amp;#34;q&amp;#34;: &amp;#34;如果出现使用emby connect登该:,录你应&amp;#34;, &amp;#34;e&amp;#34;: &amp;#34;点下一步&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;点跳过/手动输入&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;哪一个国家不能直接访问公益服的备用线路 (也就是cloudflare线路)?&amp;#34;, &amp;#34;e&amp;#34;: &amp;#34;新加坡|澳大利亚&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;使用了 Emby 公益服提供的 Android TV 官方客户端破解版，但一直提示试用即将到期或已过期怎么办？&amp;#34;, &amp;#34;e&amp;#34;: &amp;#34;破解失败，重新安装&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;无视它&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;美剧里「S1E1」「S2E3」中「E」指英文中哪个单词？&amp;#34;, &amp;#34;e&amp;#34;: &amp;#34;Earthling&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;遇到问题想在群里发问，又怕被办怎么办才好呢？&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;通读wiki 和提问的艺术全文&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;获得VIP的方法？&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;长期默默为群组解答问题&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;关于开放式提问，以下描述正确的是？&amp;#34;, &amp;#34;e&amp;#34;: &amp;#34;能获得想要的信息|会让一次聊天变得有意义&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;以上都是&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;从问题属性角度出发，MySQL数据库的使用问题适合在本群组提问吗？&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;不适合&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;小李想将 Emby 的 APK 安装文件传输到 Mibox 上，这样家里的老人就可以在电视上看 Emby 了，请问以下哪种方式可以将文件传输到电视盒子上？&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;以上均可以&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;怎么赞助 Emby 公益服？&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;他们不接受任何赞助&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;如果你想参与一个你不太了解的话题讨论，你应该怎么做。&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;不确定的看法要指出，不能误导&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;当他人为你排错时，在很基础的常识上，他要求你仔细检查，你应该？&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;认真检查并提供你的检查过程&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;使用 Emby 的 iOS 客户端观看公益服影片是否需要付费解锁或破解播放权限？&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;需要&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;提问前 确认自己已确定的各个步骤及其顺序都是必要的？&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;正确 失之毫厘差以千里&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;群友需要为公益服提供资源吗&amp;#34;, &amp;#34;e&amp;#34;: &amp;#34;需要&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;不需要&amp;#34; }, { &amp;#34;q&amp;#34;: &amp;#34;http://.</description>
    </item>
    <item>
      <title>Stirling-PDF：强大的PDF工具箱</title>
      <link>http://localhost:1313/post/stirling-pdf/</link>
      <pubDate>Thu, 09 May 2024 16:36:57 +0000</pubDate>
      <guid>http://localhost:1313/post/stirling-pdf/</guid>
      <description>前言 通常我们需要处理一些 PDF 文档，使用时再寻找工具多有不便，不妨自己部署一个工具箱。&#xA;Stirling-PDF 是一个使用 Docker 部署的本地托管的、基于 Web 的 PDF 操作工具，支持多种语言它使您能够对 PDF 文件进行各种操作，包括分割、合并、转换、重组、添加图像、旋转、压缩等。这个本地托管的 Web 应用程序已发展为包含一组全面的功能，可满足您的所有 PDF 要求。&#xA;项目功能强大，详细的 Feature 可查看项目地址：&#xA;{% ghcard Stirling-Tools/Stirling-PDF, theme=onedark%}&#xA;本站预览地址如下：&#xA;{% link Stirling-PDF, https://pdf.grew.cc, /img/link.png %}&#xA;部署 版本差异 Stirling PDF 有两个不同的版本：完整版和超精简版，二者相差 400MB 左右，版本区别如下：&#xA;Technology Ultra-Lite Full Java ✔️ ✔️ JavaScript ✔️ ✔️ Libre ✔️ Python ✔️ OpenCV ✔️ OCRmyPDF ✔️ Operation Ultra-Lite Full add-page-numbers ✔️ ✔️ add-password ✔️ ✔️ add-image ✔️ ✔️ add-watermark ✔️ ✔️ adjust-contrast ✔️ ✔️ auto-split-pdf ✔️ ✔️ auto-redact ✔️ ✔️ auto-rename ✔️ ✔️ cert-sign ✔️ ✔️ crop ✔️ ✔️ change-metadata ✔️ ✔️ change-permissions ✔️ ✔️ compare ✔️ ✔️ extract-page ✔️ ✔️ extract-images ✔️ ✔️ flatten ✔️ ✔️ get-info-on-pdf ✔️ ✔️ img-to-pdf ✔️ ✔️ markdown-to-pdf ✔️ ✔️ merge-pdfs ✔️ ✔️ multi-page-layout ✔️ ✔️ overlay-pdf ✔️ ✔️ pdf-organizer ✔️ ✔️ pdf-to-csv ✔️ ✔️ pdf-to-img ✔️ ✔️ pdf-to-single-page ✔️ ✔️ remove-pages ✔️ ✔️ remove-password ✔️ ✔️ rotate-pdf ✔️ ✔️ sanitize-pdf ✔️ ✔️ scale-pages ✔️ ✔️ sign ✔️ ✔️ show-javascript ✔️ ✔️ split-by-size-or-count ✔️ ✔️ split-pdf-by-sections ✔️ ✔️ split-pdfs ✔️ ✔️ compress-pdf ✔️ extract-image-scans ✔️ ocr-pdf ✔️ pdf-to-pdfa ✔️ remove-blanks ✔️ Docker 部署 可以使用 docker run 命令运行，如下：</description>
    </item>
    <item>
      <title>Nginx Proxy Manager：替代宝塔的又一选择</title>
      <link>http://localhost:1313/post/npm/</link>
      <pubDate>Thu, 09 May 2024 12:14:50 +0000</pubDate>
      <guid>http://localhost:1313/post/npm/</guid>
      <description>前言 由于低版本的宝塔面板存在漏洞，高版本需要绑定手机，且占用较高，加上自己的服务大多是 Docker 部署，因此直接使用反向代理的面板更加方便。 Nginx Proxy Manager 是一个 Nginx 的代理管理器，简单方便，并且支持一键申请证书、自动续期。 项目地址如下： {% ghcard NginxProxyManager/nginx-proxy-manager, theme=onedark%}&#xA;部署 使用 Docker 部署，命令如下：&#xA;mkdir /opt/npm &amp;amp;&amp;amp; cd /opt/npm &amp;amp;&amp;amp; cat &amp;lt;&amp;lt; EOF &amp;gt; docker-compose.yml version: &amp;#39;3.8&amp;#39; services: app: image: &amp;#39;docker.io/jc21/nginx-proxy-manager:latest&amp;#39; restart: unless-stopped ports: - &amp;#39;80:80&amp;#39; - &amp;#39;81:81&amp;#39; - &amp;#39;443:443&amp;#39; volumes: - ./data:/data - ./letsencrypt:/etc/letsencrypt EOF docker compose up -d 安装完成后可以使用 http://IP:81 访问后台，默认的用户名密码如下：&#xA;Email: admin@example.com Password: changeme 修改后即可正常使用，建议给后台地址反向代理。&#xA;反向代理 添加网站 主界面点击 Proxy Host- Add Proxy Host {% note success flat %} 三个选项可以自己选择是否开启</description>
    </item>
    <item>
      <title>Dockge：面向堆栈的docker-compose文件管理器</title>
      <link>http://localhost:1313/post/dockge/</link>
      <pubDate>Thu, 09 May 2024 11:57:11 +0000</pubDate>
      <guid>http://localhost:1313/post/dockge/</guid>
      <description>前言 目前习惯使用 Docker 自建应用，而 compose 更是十分方便，本次使用的 dockge 是一个精美的、易于使用的、响应式的面向堆栈的自托管 docker-compose.yaml 管理器，项目地址如下：&#xA;{% ghcard louislam/dockge, theme=onedark%}&#xA;项目特点如下：&#xA;可以在面板方便的启动、编辑、更新、停止、重启、删除项目 交互式编辑 compose 文件 方便地进入项目终端 将 docker run 命令转换为 compose 文件 项目如图：&#xA;安装 以下使用的是项目推荐的命令，命令会在 /opt 目录下建立 /dockge 和 /stacks 目录，其中 /dockge 下为 Dockge 映射的文件夹， /stacks 为 Dockge 创建的项目，方便管理。&#xA;mkdir -p /opt/stacks /opt/dockge cd /opt/dockge curl &amp;#34;https://dockge.kuma.pet/compose.yaml?port=5001&amp;amp;stacksPath=%2Fopt%2Fstacks&amp;#34; --output compose.yaml docker compose up -d # V1版本或Podman启动命令 docker-compose up -d {% note info flat %} 如果想要更改端口以及安装文件夹，可以在官网手动下载 docker-compose 文件，官网可以在 UI 修改并直接下载。 {% endnote %}</description>
    </item>
    <item>
      <title>Hexo-Butterfly修改记录</title>
      <link>http://localhost:1313/post/e1485cce/</link>
      <pubDate>Wed, 08 May 2024 08:46:52 +0000</pubDate>
      <guid>http://localhost:1313/post/e1485cce/</guid>
      <description>准备 在 [BlogRoot]\source 文件夹下新建一个文件夹 css，该文件夹用于存放自定义的 css 样式，再新建一个名为 custom.css，修改代码存于此处。&#xA;在主题配置文件 [BlogRoot]\_config.butterfly.yml 文件中的 inject 配置项的 head 子项加入以下代码，引入刚刚创建的 custom.css 文件（这是相对路径的写法）&#xA;inject: head: - &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;/css/custom.css&amp;#34; media=&amp;#34;defer&amp;#34; onload=&amp;#34;this.media=&amp;#39;all&amp;#39;&amp;#34;&amp;gt; 背景一图流 /* 页脚与头图透明 */ #footer { background: transparent !important; } #page-header { background: transparent !important; } /* 白天模式遮罩透明 */ #footer::before { background: transparent !important; } #page-header::before { background: transparent !important; } /* 夜间模式遮罩透明 */ [data-theme=&amp;#34;dark&amp;#34;] #footer::before { background: transparent !important; } [data-theme=&amp;#34;dark&amp;#34;] #page-header::before { background: transparent !</description>
    </item>
    <item>
      <title>PHP获取Bing每日壁纸</title>
      <link>http://localhost:1313/post/php-bing-api/</link>
      <pubDate>Mon, 06 May 2024 10:40:45 +0000</pubDate>
      <guid>http://localhost:1313/post/php-bing-api/</guid>
      <description>前言 自建一个 API 获取随机图片可以用于博客 cover，网上找到一篇文章，本文仅记录，所有代码都来自 这篇文章。&#xA;部署 新建一个名为 bing.php 的文件，写入下面代码：&#xA;&amp;lt;?php // 判断是否随机调用 $gettimebase = isset($_GET[&amp;#39;day&amp;#39;]) ? $_GET[&amp;#39;day&amp;#39;] : &amp;#39;&amp;#39;; if (isset($_GET[&amp;#39;rand&amp;#39;]) &amp;amp;&amp;amp; $_GET[&amp;#39;rand&amp;#39;] === &amp;#39;false&amp;#39;) { $gettime = empty($gettimebase) ? 0 : $gettimebase; } else { // 若不为随机调用则判断是否指定日期 $gettime = empty($gettimebase) ? rand(-1, 7) : $gettimebase; } // 获取 Bing Json 信息 $mkt = isset($_GET[&amp;#39;cn&amp;#39;]) &amp;amp;&amp;amp; $_GET[&amp;#39;cn&amp;#39;] === &amp;#39;true&amp;#39; ? &amp;#39;zh-CN&amp;#39; : &amp;#39;en-US&amp;#39;; $json_string = file_get_contents(&amp;#34;https://www.bing.com/HPImageArchive.aspx?format=js&amp;amp;idx=$gettime&amp;amp;n=1&amp;amp;mkt=$mkt&amp;#34;); // 转换为 PHP 数组 $data = json_decode($json_string); // 提取基础 URL $imgurlbase = &amp;#34;https://www4.</description>
    </item>
    <item>
      <title>自建umami网站统计</title>
      <link>http://localhost:1313/post/umami/</link>
      <pubDate>Mon, 06 May 2024 10:01:11 +0000</pubDate>
      <guid>http://localhost:1313/post/umami/</guid>
      <description>前言 Umami 是一款开源的、注重隐私的网站流量统计分析工具，可以方便直观的观察到网站数据，并且不像谷歌统计过多地收集用户的隐私信息，而自建服务可以避免 Adblock 插件屏蔽导致统计不准的问题。 仓库地址如下： {% ghcard umami-software/umami, theme=onedark %} 部署所用工具：&#xA;Github Vercel Supabase 部署 Vercel 首先 Fork Umami 的仓库，然后在 Supabase 新建一个项目，记住数据库密码，待项目新建完毕后，进入项目，依次点击 Project Settings-Database，在 Connecting string 复制 URL。 接下来在 Vercel 新建一个项目，导入 Github Fork 的仓库，添加下面的环境变量：&#xA;NAME VALUE DATABASE_URL 复制的 URL TRACKER_SCRIPT_NAME 自定义脚本名称，如 myscript COLLECT_API_ENDPOINT 自定义 endpoint 路径，如 /api/mycol HASH_SALT 随机字符串 {% note info flat %} 将复制的 url 中 [YOUR-PASSWORD] 换位数据库的密码，并在 url 最后添加 ?pgbouncer=true，最终链接如下形式： postgres://postgres.xxxxxxxxxxxx:[YOUR-PASSWORD]@aws-0-us-east-1.pooler.supabase.com:5432/postgres?pgbouncer=true {% endnote %}&#xA;待部署完成后须添加自定义域名，否则 Vercel 域名被墙，会无法正常使用，打开部署的网站后，默认用户名为 admin，默认密码为 umami。 添加网站后在设置-网站-跟踪代码 处复制统计代码，添加到自己网站 &amp;lt;/body&amp;gt;前即可。 Docker docker-compose 文件如下：</description>
    </item>
    <item>
      <title>自建navidrome音乐服务</title>
      <link>http://localhost:1313/post/navidrome/</link>
      <pubDate>Sat, 04 May 2024 10:28:07 +0000</pubDate>
      <guid>http://localhost:1313/post/navidrome/</guid>
      <description>前言 最开始用网易云音乐，但很多歌曲没了版权，后来用了 Apple Music 学生会员，之后一直在使用 Spotify，体验很好，无意发现这个开源项目，因此试着体验并记录一下。&#xA;本次所使用的项目： {% ghcard navidrome/navidrome, theme=onedark %} {% ghcard gitbobobo/StreamMusic, theme=onedark %} {% ghcard spotDL/spotify-downloader, theme=onedark %}&#xA;Navidrome 部署 Navidrome 是一开源的音乐服务器，可以在任何设备随时收听音乐，就像个人版 Spotify。 特点如下：&#xA;几乎可以传输任何可用的音频格式 读取并使用所有元数据 对合辑（各种艺术家专辑）等支持 多用户，每个用户都有自己的播放次数、播放列表、收藏夹等&amp;hellip; 资源使用率极低 多平台，可在 macOS、Linux 和 Windows 上运行。还提供了 Docker 镜像。 适用于所有主要平台的现成二进制文件，包括 Raspberry Pi 自动监控库的更改、导入新文件并重新加载新元数据 基于 Material UI 的主题化、现代且响应式 Web 界面 与所有 Subsonic/Madsonic/Airsonic 客户端兼容 即时转码。可以为每个用户设置。支持 Opus 编码 翻译成多种语言 Docker 部署 推荐使用 Docker 部署，docker-compose.yaml 文件如下：&#xA;version: &amp;#34;3&amp;#34; services: navidrome: image: deluan/navidrome:latest user: 1000:1000 # should be owner of volumes ports: - &amp;#34;4533:4533&amp;#34; restart: unless-stopped environment: # Optional: put your config options customization here.</description>
    </item>
    <item>
      <title>使用Windows脚本快速创建文章</title>
      <link>http://localhost:1313/post/bat-creat-post/</link>
      <pubDate>Tue, 23 Apr 2024 10:43:51 +0000</pubDate>
      <guid>http://localhost:1313/post/bat-creat-post/</guid>
      <description>前言 Hexo 每次新建文章都需要打开终端-切换目录-创建文章-打开笔记软件-打开新创建的文章。这一套流程不免步骤繁琐，因此尝试使用脚本简化流程。&#xA;代码 新建一个 .bat 文件，写入下面的代码：&#xA;@echo off :input set /p title=&amp;#34;请输入文章标题: &amp;#34; echo.%title%|findstr /r /c:&amp;#34;[&amp;amp;^&amp;lt;&amp;gt;|]&amp;#34; &amp;gt;nul &amp;amp;&amp;amp; ( echo 标题不能包含以下特殊字符: ^&amp;amp;^&amp;lt;^&amp;gt;^|^ goto input ) cd /D D:\GitHub\hexo-blog start /wait cmd /c hexo new post &amp;#34;%title%&amp;#34; set post_path=&amp;#34;D:\GitHub\hexo-blog\source\_posts\%title%.md&amp;#34; start &amp;#34;&amp;#34; &amp;#34;D:\Program\Typora\Typora.exe&amp;#34; %post_path% 将代码中的站点根目录和 Typora 的程序路径改为自己的路径。&#xA;{% note info flat %} 文件另存为 ANSI 编码，否则会乱码 {% endnote %}&#xA;排坑 过程中发现文章可以正常创建，但是并不能正常使用程序打开，排查下来发现执行完创建 post 命令后终端会直接关闭，因此代码中 start /wait cmd /c hexo new post &amp;quot;%title%&amp;quot; 命令会在新的命令提示符窗口中执行 hexo new post 命令，并且原来的批处理脚本会等待 hexo new post 命令执行完成后再继续执行。</description>
    </item>
    <item>
      <title>为Hexo博客添加豆瓣观影信息</title>
      <link>http://localhost:1313/post/hexo-douban/</link>
      <pubDate>Tue, 23 Apr 2024 10:38:35 +0000</pubDate>
      <guid>http://localhost:1313/post/hexo-douban/</guid>
      <description>前言 通过 hexo-douban 插件可以为自己的博客添加豆瓣观影和读书页面，项目地址如下：&#xA;{% ghcard mythsman/hexo-douban, theme=onedark%}&#xA;安装 首先在站点根目录安装插件：&#xA;npm install hexo-douban --save 配置 将下面的配置写入站点的配置文件 _config.yml 里 (不是主题的配置文件)&#xA;douban: id: 162448367 builtin: true item_per_page: 10 meta_max_line: 4 customize_layout: page book: path: books/index.html title: &amp;#39;This is my book title&amp;#39; quote: &amp;#39;This is my book quote&amp;#39; option: movie: path: movies/index.html title: &amp;#39;This is my movie title&amp;#39; quote: &amp;#39;This is my movie quote&amp;#39; option: game: path: games/index.html title: &amp;#39;This is my game title&amp;#39; quote: &amp;#39;This is my game quote&amp;#39; option: song: path: songs/index.</description>
    </item>
    <item>
      <title>Hexo博客Fluid主题修改</title>
      <link>http://localhost:1313/post/fluid-modify/</link>
      <pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/fluid-modify/</guid>
      <description>前言 记录对于 Hexo 主题 Fluid 的修改，来源于网络。&#xA;替换 Mac 风格代码块 在主题文件 themes\fluid\source\css 目录下新建样式文件，如 macpanel.styl，内容参考：&#xA;.highlight background: #21252b border-radius: 5px box-shadow: 0 10px 30px 0 rgba(0, 0, 0, .4) padding-top: 30px &amp;amp;::before background: #fc625d border-radius: 50% box-shadow: 20px 0 #fdbc40, 40px 0 #35cd4b content: &amp;#39; &amp;#39; height: 12px left: 12px margin-top: -20px position: absolute width: 12px 修改主题配置文件_config.fluid.yml，找到 custom_css 配置项，引入刚刚新建的样式文件（此处引入.styl 文件无需加后缀）：&#xA;custom_css: - /css/macpanel 参考 Kevin&amp;rsquo;s Blog </description>
    </item>
    <item>
      <title>Hugo 文章转 Hexo</title>
      <link>http://localhost:1313/post/993cff99/</link>
      <pubDate>Wed, 17 Apr 2024 10:58:55 +0000</pubDate>
      <guid>http://localhost:1313/post/993cff99/</guid>
      <description>前言 将博客换成了 Hexo，因此 Front Matter 信息需要修改，使用 ChatGPT 写了一个简单的 Python 更改脚本，修改的项目可以自己更改。&#xA;使用 新建一个 Python 文件，写入以下代码，将需要更改的文件放入一个文件夹，然后将文件夹路径填入代码对应位置，运行即可，需要提前安装 pyyaml 模块。&#xA;代码中将 cover 更改为 index_img，具体可以自己更改。&#xA;import os import re import yaml def modify_frontmatter(frontmatter, modifications): frontmatter = frontmatter.copy() for key, value in modifications.items(): if key == &amp;#39;_add&amp;#39;: frontmatter.update(value) # 添加键值对 elif key == &amp;#39;_delete&amp;#39;: for k in value: frontmatter.pop(k, None) # 删除键 elif key in frontmatter: if value[&amp;#39;new_key&amp;#39;] is not None: # 修改键名 frontmatter[value[&amp;#39;new_key&amp;#39;]] = frontmatter.pop(key) if value[&amp;#39;new_value&amp;#39;] is not None: # 修改键值 frontmatter[key if value[&amp;#39;new_key&amp;#39;] is None else value[&amp;#39;new_key&amp;#39;]] = value[&amp;#39;new_value&amp;#39;] return frontmatter def convert_frontmatter(folder_path, modifications): for root, dirs, files in os.</description>
    </item>
    <item>
      <title>终端设置代理</title>
      <link>http://localhost:1313/post/61ca2491/</link>
      <pubDate>Wed, 17 Apr 2024 10:41:36 +0000</pubDate>
      <guid>http://localhost:1313/post/61ca2491/</guid>
      <description>原文链接: https://doc.yoouu.cn/basic/proxy.html&#xA;前言 在国内使用终端安装各种依赖很有可能由于网络问题出错，因此通过设置终端本地代理，解决无法访问的问题。&#xA;Git git config --global http.proxy http://localhost:7890 git config --global https.proxy https://localhost:7890 # 恢复 git config --global --unset http.proxy git config --global --unset https.proxy # 如果发现取消代理的命令不生效，可以用以下命令查看全局配置信息 git config --global -l # 编辑全局配置，会启动编辑器，你可以手动去除代理信息 git config --global -e ssh clone 代理&#xA;找到你的 ssh 配置文件，没有就新建，例如 Windows -&amp;gt; C:\Users\your-username\.ssh\config&#xA;ProxyCommand connect -S 127.0.0.1:7890 -a none %h %p ...others Windows # 设置代理 netsh winhttp set proxy 127.0.0.1:1080 # 取消代理 netsh winhttp reset proxy # 查看代理 netsh winhttp show proxy CMD set http_proxy=http://127.</description>
    </item>
    <item>
      <title>Docker部署Sub-Store后端</title>
      <link>http://localhost:1313/post/sub-store/</link>
      <pubDate>Mon, 08 Apr 2024 10:58:03 +0800</pubDate>
      <guid>http://localhost:1313/post/sub-store/</guid>
      <description>前言 Sub-Store 是一个适用于 Loon 、 Surge 和 Quantumult X 的高级订阅管理工具。完全本地解析，无订阅泄露的风险。相关地址及文档见下方：&#xA;Github 地址 使用教程 自建教程 部署 mkdir -p /opt/sub-store &amp;amp;&amp;amp; cd /opt/sub-store cat &amp;gt; /opt/sub-store/docker-compose.yml &amp;lt;&amp;lt;EOF version: &amp;#34;3.8&amp;#34; services: sub-store: image: xream/sub-store:latest container_name: sub-store restart: always volumes: - /opt/sub-store:/opt/app/data environment: - SUB_STORE_FRONTEND_BACKEND_PATH=/xxx # 20位随机字符串 - SUB_STORE_CRON=1 0 * * * ports: - 3001:3001 stdin_open: true tty: true EOF docker compose up -d 随机字符串生成可以使用下面的网站：&#xA;IT 工具箱 1Password 密码生成 反向代理 使用 Nginx 或者其他工具反向代理，端口为 3001，代理完成后访问的地址为：</description>
    </item>
    <item>
      <title>推一下Vercel加速节点</title>
      <link>http://localhost:1313/post/vercel-cdn/</link>
      <pubDate>Sun, 24 Mar 2024 18:09:38 +0800</pubDate>
      <guid>http://localhost:1313/post/vercel-cdn/</guid>
      <description>转载文章，文章来源：&#xA;杜老师说 Fgaoxing 博客 写在前面 Vercel 不仅可以部署 Hexo 博客，还能部署很多服务。 境内选择 Vercel 的站长很多，为了提升访问速度，自然选择了距离大陆最近的香港节点。 选的多了，节点压力自然就会增大，就算 Vercel 属于大平台，对陆带宽依旧有限，必然会出现互相影响的情况。 再加上滥用资源等问题出现，不少小伙伴反馈 Vercel 越来越慢。 今天为 Vercel 用户提供一个加速方案。&#xA;食用方法 将原来解析至 cname.vercel.com 改为 vercel.cdn.yt-blog.top&#xA;两个 CNAME 速度有差距，这个 CNAME 对应 https://vercel-cyfan.yt-blog.top/ ，这主要是由于 104.199.217.228 只有电信快，18.162.37.140 相对不稳定，但联通和移动快，大部分 Vercel 节点都是联通和移动快。vercel.cdn.cyfan.top 使用了更多的 IP 确保在一台出现问题后不会有太面积影响，但灵感来自 vercel.cdn.cyfan.top&#xA;可访问 Vercel CDN (vercel.cdn.yt-blog.top) 查看&#xA;加速原理 Vercel 在大陆周围还有很多节点，其中包含中国台湾、韩国、日本、新加坡等，这些节点的访问延迟在接受范围，且相对香港节点来说带宽更充足。&#xA;Vercel 的 Anycast 会自动将节点解析至距离最近的香港服务器，但如果手动解析则太过麻烦。&#xA;vercel.cdn.yt-blog.top 经过不断测速（大约消耗了 200 MB 流量）手动解析，并通过 D 监控检查状态，无法访问时会及时暂停节点。使用时自动解析至附近可用节点，尽可能的选择优质节点。&#xA;这更加类似于 CF 自选 IP，而不是真正的节点，节点 IP 基于 Cyfan 的 Vercel All IP (github.</description>
    </item>
    <item>
      <title>Obsidian快速发布Hugo文章</title>
      <link>http://localhost:1313/post/obsidian%E5%BF%AB%E9%80%9F%E5%8F%91%E5%B8%83hugo%E6%96%87%E7%AB%A0/</link>
      <pubDate>Sat, 23 Mar 2024 13:13:25 +0800</pubDate>
      <guid>http://localhost:1313/post/obsidian%E5%BF%AB%E9%80%9F%E5%8F%91%E5%B8%83hugo%E6%96%87%E7%AB%A0/</guid>
      <description>前言 通常使用静态博客写文章比较麻烦，上传图片也不方便，最近发现使用 Obsidian 配合 Shell commands 插件可以快速创建文章并预览发布，配合 Image auto upload Plugin 还可以快捷上传图片到图床。 需要用到的工具：&#xA;Obsidian Picgo 或者 Piclist 软件 快捷发布文章 首先下载好 Obsidian 并且开启第三方插件，在插件市场下载三个插件：&#xA;Image auto upload Plugin Shell commands Commander 然后在博客文章所在目录打开项目，即可看到所有博客文章。接下来通过 Shell commands 插件配置文章新建、预览、发布。&#xA;原理很简单，就是通过插件调用 CMD 程序，使用命令新建发布文章，然后通过 Commander 将命令绑定到 Obsidian 左侧快捷键，这样只需要点击对应的俺按钮即可快速运行命令。&#xA;创建命令 详细步骤以 新建文章 命令为参考，其余命令步骤相同。&#xA;设置工作目录：首先进入插件设置页面，选择 Environments 选项卡，在 Working Directiory 处输入自己博客的根目录。 新建命令：首先打开 Shell commands 插件设置，点击 New shell command，新建一个命令，输入命令 hugo new post/{{_post_title}}.md 。 设置别名：点击齿轮图标可以进入命令设置页面，在 Alias 处输入命名别名，输入 新建文章 ，可以自定义。 选择 Preactions： 在 Preactions 界面 Prompt 选项选择 Create a new prompt ，Prompt title 写 新建文章 ，然后点击 New prompt field，Field lable 设置为 请输入文章标题：，这个是文章运行前的提示，然后 target value 处选择 create a new custom variable，在 Variable name 处填写 post_title ，点击创建，最终值应该为为 {{_post_title}}，完成后点击创建，效果参考下图。接着在 Preaction 页面选择新创建的 Prompt 即可。 按照同样的步骤再创建预览文章、发布文章、停止 Hugo 进程几个命令。其中发布文章还需要创建新的 Prompt ，预览文章和停止进程仅需要输入命令即可。具体的命令和参数如下：</description>
    </item>
    <item>
      <title>Webstack Hugo导航</title>
      <link>http://localhost:1313/post/webstack-hugo/</link>
      <pubDate>Thu, 21 Mar 2024 21:47:43 +0800</pubDate>
      <guid>http://localhost:1313/post/webstack-hugo/</guid>
      <description>前言 Webstack-Hugo 导航是基于纯静态的网址导航网站 webstack.cc 制作的 Hugo 主题，是一个基于 Hugo 的静态响应式网址导航主题。添加了天气及夜间模式，主要的配置信息都集成到了 config.toml，导航的各个信息都集成在 data/webstack.yml 文件中。&#xA;部署 首先下载 Hugo 到本地，同时添加系统环境变量。找到一个文件夹，然后在文件夹下打开 Windows Terminal 创建一个新的 Hugo 站点。 hugo new site webstack-hugo 下载 Webstack-Hugo 源码，并解压到 ~/webstack-hugo/themes 文件夹下，名称更改为 Webstack-Hugo，将 ~/webstack-hugo/themes/Webstack-Hugo/exampleSite 文件夹下所有内容复制到 Hugo 站点根目录，并删除站点根目录的 hugo.toml 文件。 修改网站配置。 配置信息在 config.toml 文件中 导航信息在 data/webstack.yml 文件中 新建一个 Github 仓库，将 Hugo 站点根目录下的文件推送到仓库，然后在 Vercel 创建新的项目并导入仓库。 网站 icon 获取 可以通过 API 获取网站的图标，地址如下：&#xA;https://api.iowen.cn/favicon/www.iowen.cn.png 将需要获取的网址替换到 favicon/ 后 .png 前，也可以通过在线工具箱：&#xA;https://tool.cccyun.cc/favicon 问题修复 部署好站点后会发现网站样式无法正常加载，但是本地部署正常，解决方法：将 layouts/partials 文件夹下文件中 relURL 更换为 absURL 即可。</description>
    </item>
    <item>
      <title>Hugo Stack主题修改</title>
      <link>http://localhost:1313/post/stack/</link>
      <pubDate>Thu, 21 Mar 2024 17:13:54 +0800</pubDate>
      <guid>http://localhost:1313/post/stack/</guid>
      <description>前言 上一篇文章介绍了如何部署 Hugo 博客，这里针对 Stack 主题的修改做一些记录。&#xA;准备 首先在博客根目录下的 assets 下创建一个名为 scss 的文件夹，然后在 scss 文件夹里创建一个名为 custom.scss 的文件，最终效果为~blog/assets/scss/custom.scss，创建好文件后，对于主题的大部分样式魔改都将写进这个 custom.scss，其中有很多冗余的代码。&#xA;整体细节调整 // ~\blog\assets\scss\custom.scss // 页面基本配色 :root { // 全局顶部边距 --main-top-padding: 30px; // 全局卡片圆角 --card-border-radius: 12px; // 标签云卡片圆角 --tag-border-radius: 8px; // 卡片间距 --section-separation: 40px; // 全局字体大小 --article-font-size: 1.8rem; // 行内代码背景色 --code-background-color: #f8f8f8; // 行内代码前景色 --code-text-color: #e96900; // 暗色模式下样式 &amp;amp;[data-scheme=&amp;#34;dark&amp;#34;] { // 行内代码背景色 --code-background-color: #ff6d1b17; // 行内代码前景色 --code-text-color: #e96900; // 暗黑模式下背景色 --body-background: #0D0D0D; // 暗黑模式下卡片背景色 --card-background: #121212; // 代码块背景色 .</description>
    </item>
    <item>
      <title>使用Hugo搭建个人博客</title>
      <link>http://localhost:1313/post/hugo-blog/</link>
      <pubDate>Thu, 21 Mar 2024 17:13:32 +0800</pubDate>
      <guid>http://localhost:1313/post/hugo-blog/</guid>
      <description>前言 博客的引擎选择一直是个问题。动态博客和静态博客各有优劣。动态博客 Wordpress、Typecho 等拥有精美的主题，后台管理也比较方便，但是需要服务器。静态博客如 Hexo、Hugo、Astro 等可以直接部署静态页面，但是相对写文章比较繁琐一点。今天再次记录一下之前折腾的 Hugo，之前使用的主题是 Loveit，后来觉得 Stack 不错，所以本次就拿这个主题记录一下。&#xA;前提：&#xA;部署静态博客需要的：&#xA;一个 Github 账号 一个 Vercel 账号（非必须） 一个域名（非必须，但是有比较好） 1. 下载 Hugo 和 Git 到本地 将 Hugo 下载到本地，最好下载 Extended 版本，下载地址：点此下载&#xA;下载后放到一个不会删掉的地方，然后在系统环境变量 Path 中添加 Hugo 程序 和 Git 所在目录，完成后重启电脑，之后可以在 Windows Terminal 可以检测一下是否添加成功。&#xA;2. 创建仓库 在本地一个目录当作 Hugo 的目录，在此打开 Windows Terminal，然后输入下面的命令：&#xA;hugo new site blog 输入完成后会在文件夹下出现一个 blog 文件夹。&#xA;3. 下载主题 git init git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack # 更新主题 git submodule update --remote 如果后续修改主题，最好可以 fork 主题仓库，然后将上述地址换成自己的仓库地址。</description>
    </item>
    <item>
      <title>Windows终端美化</title>
      <link>http://localhost:1313/post/windows-terminal/</link>
      <pubDate>Mon, 18 Mar 2024 10:27:32 +0800</pubDate>
      <guid>http://localhost:1313/post/windows-terminal/</guid>
      <description>前言 Windows 推出了新的终端 Windows Teminal，虽然外观有所进步，但还是达不到自己预期，因此可以自己简单修改一下。&#xA;准备工作 计算机上启动 Windows PowerShell 时，执行策略很可能是 Restricted（默认设置）。&#xA;Restricted 执行策略不允许任何脚本运行。 AllSigned 和 RemoteSigned 执行策略可防止 Windows PowerShell 运行没有数字签名的脚本。 因此如果直接安装很可能出现无法运行脚本的错误。&#xA;查看当前策略 打开 PowerShell 然后输入:&#xA;get-executionpolicy PS C:\WINDOWS\system32&amp;gt; get-executionpolicy Restricted 修改策略 以管理员身份打开 Windows Posershell，执行下列命令：&#xA;set-executionpolicy remotesigned # 运行后输入 Y 安装 首先在微软商店下载两个应用，直接搜索 Windows Terminal 以及 oh-my-posh。&#xA;安装字体。安装作者推荐的 MesloLGM NF 字体，点此下载，这样可以解决部分字体图标渲染问题。&#xA;设置字体。打开 Windows Terminal，按 Ctrl + Shift + 逗号打开设置文件，然后在第 41 行 profiles 下 default 中添加字体设置，在第 43 行回车，然后添加如下代码后保存。&#xA;&amp;#34;font&amp;#34;: { &amp;#34;face&amp;#34;: &amp;#34;MesloLGM NF&amp;#34; } 加载 oh-my-posh 设置，在 Windows Terminal 中输入下面第一行命令创建新配置文件，创建后输入第二行命令，然后将第三条命令保存：</description>
    </item>
    <item>
      <title>常用审计规则</title>
      <link>http://localhost:1313/post/shenji/</link>
      <pubDate>Tue, 12 Mar 2024 16:42:34 +0800</pubDate>
      <guid>http://localhost:1313/post/shenji/</guid>
      <description>(api|ps|sv|offnavi|newvector|ulog\.imap|newloc)(\.map|)\.(baidu|n\.shifen)\.com (.+\.|^)(360|so)\.(cn|com) (.*\\.||)(dafahao|minghui|dongtaiwang|epochtimes|ntdtv|falundafa|wujieliulan|zhengjian)\.(org|com|net) (.*\\.||)(shenzhoufilm|secretchina|renminbao|aboluowang|mhradio|guangming|zhengwunet|soundofhope|yuanming|zhuichaguoji|fgmtv|xinsheng|shenyunperformingarts|epochweekly|tuidang|shenyun|falundata|bannedbook)\.(org|com|net) (.*\\.||)(icbc|ccb|boc|bankcomm|abchina|cmbchina|psbc|cebbank|cmbc|pingan|spdb|citicbank|cib|hxb|bankofbeijing|hsbank|tccb|4001961200|bosc|hkbchina|njcb|nbcb|lj-bank|bjrcb|jsbchina|gzcb|cqcbank|czbank|hzbank|srcb|cbhb|cqrcb|grcbank|qdccb|bocd|hrbcb|jlbank|bankofdl|qlbchina|dongguanbank|cscb|hebbank|drcbank|zzbank|bsb|xmccb|hljrcc|jxnxs|gsrcu|fjnx|sxnxs|gx966888|gx966888|zj96596|hnnxs|ahrcu|shanxinj|hainanbank|scrcu|gdrcu|hbxh|ynrcc|lnrcc|nmgnxs|hebnx|jlnls|js96008|hnnx|sdnxs)\.(org|com|net|cn) (.*\\.||)(unionpay|alipay|baifubao|yeepay|99bill|95516|51credit|cmpay|tenpay|lakala|jdpay)\.(org|com|net|cn) (.*\\.||)(firstbank|bot|cotabank|megabank|tcb-bank|landbank|hncb|bankchb|tbb|ktb|tcbbank|scsb|bop|sunnybank|kgibank|fubon|ctbcbank|cathaybk|eximbank|bok|ubot|feib|yuantabank|sinopac|esunbank|taishinbank|jihsunbank|entiebank|hwataibank|csc|skbank)\.(org|com|net|tw) (Subject|HELO|SMTP) (torrent|\.torrent|peer_id=|info_hash|get_peers|find_node|BitTorrent|announce_peer|announce\.php\?passkey=) BitTorrent protocol (^.*\@)(guerrillamail|guerrillamailblock|sharklasers|grr|pokemail|spam4|bccto|chacuo|027168)\.(info|biz|com|de|net|org|me|la) (.?)(xunlei|sandai|Thunder|XLLiveUD)(.) </description>
    </item>
    <item>
      <title>部署自己的ChatGPT并白嫖GPT4的API</title>
      <link>http://localhost:1313/post/cogpt/</link>
      <pubDate>Thu, 07 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/cogpt/</guid>
      <description>前言 ChatGPT 官网使用不便，并且访问速度不佳，因此部署自己的 web 页面，通过 API 使用成为了主流选择，本文通过 ChatGPTNextWeb 部署页面，并通过 copilot 项目白嫖 GPT4 的 API。 前提：&#xA;copilot 访问权限（Github 学生包可以白嫖） vercel 账号 本文用到的项目地址如下：&#xA;CoGPT NextChat 💡 cogpt 可以把 OpenAI API 格式的请求转发到 GitHub Copilot 服务端，从而免费使用 gpt-4。&#xA;警告（来自作者博客） 这个项目仅适合个人使用。并不适合访问量巨大的盈利项目。&#xA;最佳实践方式：&#xA;本机部署，仅自己使用（推荐） 部署在个人服务器上，仅自己使用，或和几个朋友共同使用（不公开） 不建议的方式：&#xA;提供公共服务 在一个 ip 上使用了很多 token 容易被判定为异常行为 使用 Serverless 服务 由于 Serverless 服务的 ip 不固定，所以很容易被判定为异常行为 用于盈利项目 请求量过大，容易被判定为异常行为 请不要尝试上述任何一种不建议的方式，否则可能会导致 GitHub Copilot 账号，甚至 GitHub 账号被封禁。&#xA;部署服务 可以部署到本地电脑，也可以部署到 vps，这里以 vps 为例。&#xA;mkdir -p /opt/cogpt &amp;amp;&amp;amp; cd /opt/cogpt &amp;amp;&amp;amp; vim docker-compose.</description>
    </item>
    <item>
      <title>自建DNS解锁Netflix</title>
      <link>http://localhost:1313/post/netfli-dns/</link>
      <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/netfli-dns/</guid>
      <description>通过 DNSmasq 和一台已解锁 Netflix 的服务器，将其余服务器全部解锁 Netflix 。&#xA;原理：使用 Dnsmasq 的DNS将网站解析劫持到 SNIproxy 反向代理的页面上。&#xA;特性：脚本默认解锁Netflix Hulu HBO 等，如需增减域名，请编辑下面文件： /etc/dnsmasq.d/custom_netflix.conf /etc/sniproxy.conf&#xA;项目地址：Github&#xA;安装 前提需求：&#xA;一台解锁 Netflix 的服务器 放行 53、80、443端口 快速安装：&#xA;wget --no-check-certificate -O dnsmasq_sniproxy.sh https://raw.githubusercontent.com/myxuchangbin/dnsmasq_sniproxy_install/master/dnsmasq_sniproxy.sh &amp;amp;&amp;amp; bash dnsmasq_sniproxy.sh -f 卸载：&#xA;wget --no-check-certificate -O dnsmasq_sniproxy.sh https://raw.githubusercontent.com/myxuchangbin/dnsmasq_sniproxy_install/master/dnsmasq_sniproxy.sh &amp;amp;&amp;amp; bash dnsmasq_sniproxy.sh -u systemd-resolve 服务占用 53 端口解决方法 systemctl stop systemd-resolved vim /etc/systemd/resolved.conf 按照下面说明修改文件&#xA;[Resolve] DNS=8.8.8.8 1.1.1.1 #取消注释，增加dns #FallbackDNS= #Domains= #LLMNR=no #MulticastDNS=no #DNSSEC=no #Cache=yes DNSStubListener=no #取消注释，把yes改为no 重启服务：</description>
    </item>
    <item>
      <title>甲骨文相关</title>
      <link>http://localhost:1313/post/oracle/</link>
      <pubDate>Tue, 27 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/oracle/</guid>
      <description>前言 甲骨文没法直接重装系统，因此这里记录一下甲骨文相关问题。&#xA;开启 root 登录 vim /etc/ssh/sshd_config PermitRootLogin yes PasswordAuthentication yes systemctl restart sshd.service 卸载相关程序 pcbind systemctl stop rpcbind systemctl stop rpcbind.socket systemctl disable rpcbind systemctl disable rpcbind.socket oracle-cloud-agent systemctl stop oracle-cloud-agent systemctl disable oracle-cloud-agent systemctl stop oracle-cloud-agent-updater systemctl disable oracle-cloud-agent-updater 防火墙相关 停止 firewall 并禁止开机启动 systemctl stop firewalld.service systemctl disable firewalld.service ubuntu 开放所有端口&#xA;iptables -P INPUT ACCEPT iptables -P FORWARD ACCEPT iptables -P OUTPUT ACCEPT iptables -F 清除 iptables 规则</description>
    </item>
    <item>
      <title>部署Plex并挂载Alist</title>
      <link>http://localhost:1313/post/plex/</link>
      <pubDate>Fri, 09 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/plex/</guid>
      <description>前言 由于最近 Netflix 清退了一大批低价区用户，并且不退款，需要与银行争议，就开了一个月的土耳其区，然而土耳其第一个月并不能用土耳其之外的 IP 观看，白白浪费一个月，虽然最近尼日利亚的低价已经超过了巴基斯坦，但还是决定放弃了，花钱找罪受，不如买个 Emby 。 之后在网上看到可以通过服务器部署 Plex Media Server ，将 Alist 挂载到服务器，Plex 添加 Alist 目录，然后 infuse 连接 Plex ，这样可以实现刮削，并且全平台同步，还可以搭配 Aria2 下载自动上传网盘，达到良好的观影效果。&#xA;一、可执行程序部署 1. 部署 Plex 部署可以通过可执行程序，也可以通过 docker ，如果想挂载 alist ，记得和 alist 程序安装在同一台服务器。&#xA;部署程序&#xA;# centos yum -y update &amp;amp;&amp;amp; yum -y install wget https://downloads.plex.tv/plex-media-server-new/1.32.8.7639-fb6452ebf/redhat/plexmediaserver-1.32.8.7639-fb6452ebf.x86_64.rpm yum install plexmediaserver*.rpm # Debian/Ubuntu系统 apt-get -y update &amp;amp;&amp;amp; apt-get -y upgrade wget https://downloads.plex.tv/plex-media-server-new/1.32.8.7639-fb6452ebf/debian/plexmediaserver_1.32.8.7639-fb6452ebf_amd64.deb dpkg -i plexmediaserver*.deb 设置开机自启&#xA;systemctl enable plexmediaserver.service systemctl start plexmediaserver.</description>
    </item>
    <item>
      <title>Alist部署</title>
      <link>http://localhost:1313/post/alist/</link>
      <pubDate>Thu, 08 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/alist/</guid>
      <description>前言 目前很多人通过网盘分享影视资源，如阿里云盘、115网盘等，同时还有微软的 E5 管理员账号，一个账号就有 5T 空间，用来做存储很不错，但是众多网盘分享文件很不方便，网盘自己的页面看视频也比较简陋，这个时候我们可以通过目录列表整合各种网盘，如以前的 oneindex、olaindex，最近常用的是 Alist ，支持网盘众多，部署方便。&#xA;Alist 是一个支持多种存储，支持网页浏览和 WebDAV 的文件列表程序，由 gin 和 Solidjs 驱动，程序开源地址以及文档如下：&#xA;Github&#xA;文档&#xA;一、官方 Alist 1. 安装 安装非常简单，直接使用官方的一键脚本&#xA;# 安装 curl -fsSL &amp;#34;https://alist.nn.ci/v3.sh&amp;#34; | bash -s install # 更新 curl -fsSL &amp;#34;https://alist.nn.ci/v3.sh&amp;#34; | bash -s update # 卸载 curl -fsSL &amp;#34;https://alist.nn.ci/v3.sh&amp;#34; | bash -s uninstall 默认安装在 /opt/alist 中。自定义安装路径，将安装路径作为第二个参数添加，必须是绝对路径（如果路径以 alist 结尾，则直接安装到给定路径，否则会安装在给定路径 alist 目录下），如 安装到 /root：&#xA;# Install curl -fsSL &amp;#34;https://alist.nn.ci/v3.sh&amp;#34; | bash -s install /root # update curl -fsSL &amp;#34;https://alist.</description>
    </item>
    <item>
      <title>本科和研究生专业目录</title>
      <link>http://localhost:1313/post/zhuanyemulu/</link>
      <pubDate>Tue, 06 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/zhuanyemulu/</guid>
      <description>最近对于所学专业的专业代码一直有所疑惑，因此搜索后得知本科的专业设置和研究生设置有所不同，教育部也对本科和研究生分别发布了对应的专业目录及相关管理办法，这里记录一下。&#xA;本科专业目录目前最新的是2022版，是在2012年版本的基础上完成。教育部通知链接如下：&#xA;教育部关于公布2022年度普通高等学校本科专业备案和审批结果的通知 - 中华人民共和国教育部政府门户网站&#xA;研究生专业目录最新也是2022版，于2023年开始实施，教育部通知链接如下：&#xA;国务院学位委员会 教育部关于印发《研究生教育学科专业目录（2022年）》《研究生教育学科专业目录管理办法》的通知 - 中华人民共和国教育部政府门户网站&#xA;具体目录文件如下：&#xA;本科专业目录&#xA;研究生专业目录</description>
    </item>
    <item>
      <title>Alist自定义美化</title>
      <link>http://localhost:1313/post/alist-modify/</link>
      <pubDate>Sun, 04 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/alist-modify/</guid>
      <description>自定义头部 &amp;lt;!--Alist V3建议添加的，已经默认添加了，如果你的没有建议加上--&amp;gt; &amp;lt;script src=&amp;#34;https://polyfill.io/v3/polyfill.min.js?features=String.prototype.replaceAll&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;!--引入字体，全局字体使用--&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://npm.elemecdn.com/lxgw-wenkai-webfont@1.1.0/lxgwwenkai-regular.css&amp;#34; /&amp;gt; &amp;lt;!--不蒜子计数器--&amp;gt; &amp;lt;script async src=&amp;#34;https://busuanzi.icodeq.com/busuanzi.pure.mini.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;!-- Font6，自定义底部使用和看板娘使用的图标和字体文件--&amp;gt; &amp;lt;link type=&amp;#39;text/css&amp;#39; rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://npm.elemecdn.com/font6pro@6.3.0/css/fontawesome.min.css&amp;#34; media=&amp;#39;all&amp;#39;&amp;gt; &amp;lt;link href=&amp;#34;https://npm.elemecdn.com/font6pro@6.3.0/css/all.min.css&amp;#34; rel=&amp;#34;stylesheet&amp;#34;&amp;gt; &amp;lt;style&amp;gt; /* 去除通知栏 右上角 X */ .notify-render .hope-close-button { display: none; } /* 文字超长自动换行 */ .name-box .name { white-space: unset !important; overflow: unset !important; } /* 缩略图图片变大 代码中的160px 自己改 现在是注释状态若需要自行解除注释 */ /*.obj-box &amp;gt; div { grid-template-columns: repeat(auto-fill, minmax(160px, 1fr)) } .obj-box &amp;gt; div .item-thumbnail{ height: 100px; }*/ /* 图片API用法点进去都会有食用说明的,API来自网络不保证实效性稳定性自己测试 樱花：https://www.</description>
    </item>
    <item>
      <title>SSPanel Uim部署及修复SS订阅下发教程</title>
      <link>http://localhost:1313/post/sspanel/</link>
      <pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/sspanel/</guid>
      <description>前言 请注意，本教程仅用于学习目的，切勿将其用于非法用途。使用本教程搭建面板需要遵循法律法规，谨慎使用相关技术。&#xA;1. 安装宝塔面板 7.7 # 更新系统和安装 wget、curl apt-get update -y &amp;amp;&amp;amp; apt-get install wget -y &amp;amp;&amp;amp; apt-get install curl -y # 安装宝塔面板 curl -sSO &amp;lt;https://raw.githubusercontent.com/zhucaidan/btpanel-v7.7.0/main/install/install_panel.sh&amp;gt; &amp;amp;&amp;amp; bash install_panel.sh # 删除登录验证 sed -i &amp;#34;s|if (bind_user == &amp;#39;True&amp;#39;) {|if (bind_user == &amp;#39;REMOVED&amp;#39;) {|g&amp;#34; /www/server/panel/BTPanel/static/js/index.js rm -rf /www/server/panel/data/bind.pl 2. 配置宝塔面板 安装如下： Nginx 1.22.1 PHP 8.2 + MySQL 10.11.6-MariaDB Redis 7.0.11 phpMyAdmin 4.9 Pure-Ftpd 1.0.49 安装 PHP 扩展：fileinfo、redis、yaml。 删除 PHP 被禁用函数：proc_open、proc_get_status、putenv。 3. 创建网站并添加 SSL 证书 4.</description>
    </item>
    <item>
      <title>记录一次PHP启动失败</title>
      <link>http://localhost:1313/post/php/</link>
      <pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/php/</guid>
      <description>问题 在部署一个站点时，在安装了 PHP 7.4 的情况下安装 PHP 8.2，然而安装完成后启动报错。&#xA;具体报错内容如下：&#xA;/www/server/php/82/sbin/php-fpm: symbol lookup error: /www/server/php/82/sbin/php-fpm:undefined symbol: crypto_pwhash_scryptsalsa208sha256_opslimit_interactive 解决 直接谷歌搜索报错内容，发现宝塔面板论坛有相关问题：php无法启动的N种常见错误解决教程 情况七，给出的解决办法是重新编译安装，然而编译安装后仍未解决（也有成功的，可以先试试）。CSDN 也有相关问题，并在 Serverfault找到了解决方法，来源在文末。&#xA;方法就是重新编译安装 libsodium&#xA;具体步骤如下：&#xA;删除 usr/local/lib目录下相关 libsodium文件 下载 tar 包，并解压 wget &amp;lt;https://download.libsodium.org/libsodium/releases/libsodium-1.0.19-stable.tar.gz&amp;gt; # 建议稳定版 &amp;lt;https://download.libsodium.org/libsodium/releases/&amp;gt; tar -zxvf libsodium-1.0.19-stable.tar.gz 编译安装 cd ./libsodium-stable ./configure make &amp;amp;&amp;amp; make check sudo make install 完成后即可成功启动。&#xA;参考 Serverfault php无法启动的N种常见错误解决教程 CSDN Libsodium 官方文档 </description>
    </item>
    <item>
      <title>Windows安装IDM下载器并解除限制</title>
      <link>http://localhost:1313/post/idm/</link>
      <pubDate>Sun, 21 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/idm/</guid>
      <description>前言 在众多下载管理器中，IDM（Internet Download Manager）以其强大的功能和稳定的性能脱颖而出，成为许多用户的首选下载工具之一。IDM 不仅能够加速下载速度，还具备智能任务管理、断点续传、调度下载等一系列实用功能，极大地提升了下载文件的效率。之前的破解版很多已经不能使用，因此这里介绍新发现的工具。&#xA;⚠️ 本教程仅供学习和研究使用，如果你决定采用这种方法，那么风险自负。&#xA;1. 安装 IDM 首先，你需要在官方网站上下载 IDM 的安装包。下载完成后，按照提示进行安装。安装过程中可能会提示你关闭浏览器等软件，以保证安装顺利完成。IDM的安装过程非常简单，只需要按照提示一步步操作即可。&#xA;2. IDM 破解方法 本教程的工具来自以下网站：&#xA;[Microsoft Activation Scripts]&#xA;IDM Activation Script&#xA;方法一 打开Powershell工具，不是CMD 粘贴如下命令，打开后选择选项 1 安装即可 irm [https://massgrave.dev/ias](https://massgrave.dev/ias) | iex 方法二 在下载地址一或下载地址二)下载压缩包并解压。 解压后的文件夹内运行IAS.cmd文件，即可看到破解界面。 通过以上步骤，你应该了解如何在 Windows 系统上安装和破解 IDM。但是，如果有能力仍然建议购买正版软件，以支持软件开发者的工作并保证自己的电脑安全。在享受便利的同时，也要注重合法合规，尊重软件开发者的辛勤努力。&#xA;参考 Microsoft Activation Scripts 引用文章 </description>
    </item>
    <item>
      <title>Typora配合PicList快速上传图片并加速 </title>
      <link>http://localhost:1313/post/piclist/</link>
      <pubDate>Thu, 03 Aug 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/piclist/</guid>
      <description>前言 在Typora写笔记时不免使用图片，这里使用GitHub作图床，配合PicList上传，并通过jsdelivr实现CDN加速。&#xA;一. 准备 首先在 GitHub 中创建一个新的公共仓库。接下来生成一个新的 Token，地址为https://github.com/settings/tokens， Token 权限需要勾选write:packages和read:packages&#xA;Token 只显示一次，忘记了需要重新生成，注意保存&#xA;二. 创建网站 在服务器上创建一个新的网站和数据库，将下面项目打包后放入网站根目录并解压。 autoPicCDN&#xA;将项目中的数据库文件pic.sql上传到数据库中并替换覆盖 三. 修改参数 在 up.php 中修改参数：&#xA;一般选择 GitHub USER 填写用户名 REPO 填写仓库名 TOKEN 填写第一步的TOKEN 数据库信息只需修改 dbname user pass，与第二步中一致 四. 配置 PicList 下载 PicList（PicGo基础上开发） 或者 Picgo，地址如下： PicList&#xA;PicGo&#xA;安装 web-uploader插件 配置上传参数，填好后确认 API 地址填写up.php路径，如www.pic.com/up.php POST 参数名填写 pic JSON 路径填写 data.url 五. 配置 Typora 依次打开文件-&amp;gt;偏好设置-&amp;gt;图像 插入图片时选择“上传图片” 在最下方上传服务设定选择对应的应用 PicList或者 PicGo 六. Themeable 主题添加 Mac 风格代码块 在主题文件夹下建立两个文件对应 light 和 dark 模式。</description>
    </item>
    <item>
      <title>Gpower计算效应量</title>
      <link>http://localhost:1313/post/gpower/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/gpower/</guid>
      <description>Background 在零假设检验 （Null Hypothesis Significant Test, NHST）中四个相互关联的统计量：样本量、效应量、alpha水平和统计功效。这四个变量中，如果我们确定了其中的三个，就可以计算出第四个未知的变量。 样本量，simple size。一些方法学的研究者建议，如果无法确定所研究对象的效应量，那么每个实验条件的观测数目最好大于50（Simmons， 2003）。 效应量，effect size。效应量，表示两个总体分布的重叠程度，反映处理效应大小的度量。如果说P值是判断显著性是还是否的标准，效应量可以视为量化条件间差异或相似程度的指标。有时候，可能两个实验条件之间差异显著，但是实际上效应量很小，这种显著的统计结果也不一定具有现实应用意义。效应量可分为以下三类： 简单效应量。简单效应量通常是效应组与对照组平均值之差。APA(美国心理学会)建议，当简单效应量具有实际的实践意义时(如3个月的运动减肥干预可以减少脂肪多少千克)，可考虑采用简单效应量。 标准化效应量。由于简单效应量受到量纲、整体变异大小等因索限制，不便于研究间的比较。标准化效应量则通过标准化数据解决了这些问题(如Cohen’s d等)。 相关效应量。相关效应量则是指自变量与应变量的相关程度(如决定系数等)，相关研究往往要求报道结果的简单效应量和相关效应量，如在回归方程中应报道决定系数或校正决定系数已成为基本要求. 统计功效或统计检验力，power。统计功效指某检验能够正确地拒绝一个错误的虚无假设的能力，用1-β表示。在实验设计中，power反映了假设检验能够正确检测到真实实验操纵效应的能力。一般而言，根据Cohen的说法，一个统计检验力为0.8及以上的研究才算比较高，所以一般power设置为0.8 (Cohen, 1992). G-power的实际应用 需要进行一个32（被试间被试内）的混合实验设计，已知power=0.8，a=0.05，需要进行F检验，不知道到效应量和样本量。 对于未知的效应量： 如果研究对象已经有元分析，最好使用元分析中报告的效应量。 如果没有元分析，但是有相关的前人研究，可以按照下列教程进行计算具体某个研究的效应量。 如果既没有元分析，也没有前人文献····如果无法确定所研究对象的效应量，那么每个实验条件的观测数目最好大于50（Simmons， 2003）（actually， I am not sure about this suggestion）。 效应量的数量，对于F-test而言，每个统计效应都可以计算出一个对应的效应量，例如A变量主效应，B变量主效应，A*B交互效应以及事后的t检验都存在对应的power analysis。但大家一般并不把所有的功效分析都计算一遍，只聚焦在关键的统计效应上。这一点在计算前人文献效应量和计算事前设计的样本量时都需要注意，务必保持前后所选择的计算对象是一致的。 效应量的类型 在计算效应量之前，需要了解ANOVA分析常见的效应量指标，及其指标之间的转换方法。 方差分析中常见的两类效应量指标就是eta方和f （胡竹菁，2011）。Gpower所采用的效应量指标是f（Cohen, 1977），而SPSS中ANOVA分析报告的效应量指标为偏eta方。 效应量的大小 根据Cohen的建议，f小于0.1为小的效应；f在0.25左右为中等效应；f大于0.4属于大的效应（ Cohen, J., 1988）。0.2的偏eta方对应的效应量f在0.5左右。一般而言，中等和较大的效应量也是可以被接受的，但这仅仅适用于实在找不到前人相似研究的情况。只要前人有类似的研究或元分析，还是要按照前人的结果去计算效应量。 第一步 计算前人已发表文献中的效应量f（如果没有元分析的话） 首先你需要找到与当前研究主题相似的前人研究&#xA;打开G-power，Test family 选择F-tests Statistical test这里,如前所述，同一种ANOVA分析具体也有多种选择。注意选择取决于实验目的。选择最关键的。 Type of power analysis. 这里用不到设置，默认即可。 点击Input Parameters下的Determine，打开具体的计算面板。具体而言，又有三种计算方法： 一种是如果选择的between factors，三种方法都可以使用。可以根据平均值（means）和标准差（SD）进行计算效应量。也可以使用下面两种方法。 From variances 直接使用偏eta方（partial Eta squared）计算效应量f。这个最简单，但是有的研究中没有提供这个指标。 根据前人文献结果部分ANOVA的结果，选择合适的效应量计算方法。输入参数，点击Calculate, 得到这篇研究的ES。 然后，需要从多个相似研究中收集其ES。一般情况，所有找到的研究并不一定会报告同样类型的效应量指标。 收集完之后，需要将不同类型的效应量指标转换为同种类型的效应量指标，如ANOVA的f指标。 转换完之后，计算所有效应量的平均值。计算好的平均值用于后续的功效分析。 第二步 计算事前实验设计的样本量 此时，假设你已经通过元分析或者前人文献得到了效应量的值，那么NHST四个指标已知其3，只有样本量未知。</description>
    </item>
    <item>
      <title>近红外数据分析步骤</title>
      <link>http://localhost:1313/post/fnirs/</link>
      <pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/fnirs/</guid>
      <description>fNIRS Data Preprocessing使用步骤 本文是近红外数据分析步骤，适用于joint Simon task，使用 宏程序fNIRS Data Preprocessing 以及其他宏程序完成，ETG7100型号设备数据格式为编号_HBA_Probe1_Oxy.csv，编号自定义，最好写成sub001_run1这种形式，命名最好采用单数，即第1对被试为sub01，第2对为sub03，方便后续分割两个被试的数据。&#xA;fNIRS Data Preprocessing 宏程序介绍 程序界面包括三部分，步骤选择、设置、文件列表查看，如下图。&#xA;主要使用步骤为首先选择源数据路径，粘贴进对话框后点击File List查看是否正确，然后在 Type of calculation 选择程序，点击Set 设置，设置无误后点击 Start开始。&#xA;脑内激活（Intra-brain activation） 前面步骤使用 fNIRS Data Preprocessing程序完成，十三步后可使用自定义宏程序。&#xA;Step01. Hitachi 使用 Excel 程序Hitachi更新数据格式&#xA;输入目标文件的路径保存 Oxy 数据，按 File List 按钮 从Type of Calculation中选择Hitachi，按Set按钮 按 Start开始程序 结束后程序不会输出新的文件 Step02. Trigger Check 输入目标文件路径，按 File List 按钮 输入结果文件Trigger.xlsx的保存路径 从Type of Calculation中选择Trigger Check，按Set按钮 按 Start开始程序，对话框中输入 1 结束后程序会输出新的文件 Trigger.xlsx Step03. 格式转换 xlsx to mat 打开 Matlab，路径选择到 Hitachi后的文件路径，左侧出现文件后即成功 输入下列代码转换格式 for i = 1:9 # i代表 sub0 后的数量 这里表示 sub01到 sub09 for j = 1:2 # j 代表run数量，有几个修改一下即可 for k = 1:4 # k 代表 Probe数量，即光极片数量 a = [&amp;#39;sub0&amp;#39;,num2str(i),&amp;#39;_run&amp;#39;, num2str(j),&amp;#39;_HBA_Probe&amp;#39;, num2str(k),&amp;#39;_Oxy.</description>
    </item>
    <item>
      <title>解决Surge部分应用代理提示</title>
      <link>http://localhost:1313/post/surge/</link>
      <pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/surge/</guid>
      <description>注意：Surge 更改了方式，目前已不需要此模块。&#xA;前言 很多应用在开启时会检测是否开启代理，如果开启则无法正常使用，这里记录一下如何解决此类问题。&#xA;跳过代理 有的应用只需要设跳过代理即可解决。&#xA;首先打开 Surge 的 工具-最近请求，查找目标 APP 的 域名，然后在首页-更多设置中将其添加入跳过代理的列表中。&#xA;如果此种方法不能解决，可尝试以下两种方法。&#xA;兼容模式 对于第一种方法无法解决的 APP ，可以打开 Surge 的兼容模式，位置在首页-更多设置-兼容性-Tun-Only。这种方法设置简单，然而存在一定问题。&#xA;部分应用在启动时会检查是否配置了代理，如果检查到代理就会停止工作（如浦发银行）。这是一种不专业的做法，代理既不会降低安全性，也是在企业网络下一种常见的配置。&#xA;Surge 在启动时，为了实现多种复杂功能，会同时配置虚拟代理设置和虚拟 VPN，从而引发上述应用的反代理检查。（部分同类应用没有此问题是因为只配置了虚拟 VPN）&#xA;该问题可通过开启 Surge 的兼容性模式 VIF Only 解决，但是开启后会导致 HTTP 相关高级功能失效，不推荐。&#xA;Surge 手册&#xA;如果希望更好地解决可使用第三种方法。&#xA;快捷指令 此方法其实是创建一个自动化的快捷指令，在每次打开特定应用时打开兼容模式，关闭应用时再关闭兼容模式，因为 Surge 模块的优先级比配置更高，因此使用模块控制兼容模式的开关，然后通过 API 控制模块的开关。&#xA;1. 打开 Surge HTTP API 功能 首先打开 Surge 的 API 功能。在配置文件 General 下加入如下设置：&#xA;[General] http-api = 你的密码@127.0.0.1:7170 2. 创建模块 创建一个模块控制兼容模式的开关，可以建立本地模块也可使用外部链接。&#xA;模块内容如下：&#xA;#!name=TUN Only #!desc=开启 Tun Only 兼容模式，解决某些 APP 不能正常连接的问题 #!</description>
    </item>
    <item>
      <title>英文论文写作</title>
      <link>http://localhost:1313/post/thesis-writing/</link>
      <pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/thesis-writing/</guid>
      <description>英文写作最重要：线性写作&#xA;标题 尽量简单，不要花哨 用一个句子 引言 第一段话告诉读者除了结果之外的一切&#xA;第一句话 奶奶名言（motherhood statement）定义一下 为什么研究它 GAP 为什么要填补空白 你的研究问题 第二段 主题句&#xA;主题句要写出来 第三段&#xA;介绍现有的研究 思路回归到研究内容 第四段&#xA;再次讲研究目的和研究方法（参与者、材料和程序） 最后一段&#xA;你期望的结果是什么（假设） 假设和结果一致 方法 研究是否注册 参与者 材料和程序和在一起写 线性写作 有图介绍研究流程和刺激 结果 结果和假设联系 为检验假设做…检验 有图 讨论 第一段&#xA;论文的摘要、目的、如何研究、主要结果是什么 第二段&#xA;第一个重要结果 意义段落&#xA;理论贡献 实际贡献 缺陷段落&#xA;不要写很多 第一个写最大的问题 接下来要做的或已经做的弥补一个缺陷 指出你不会做但应该做的理想研究 结论段落&#xA;重复讨论第一段及研究的意义 最后一句话：奶奶名言 其他要点 翻译 DeepL 最好 其次Google cover letter 为什么希望论文在期刊发表 没有同时审查 伦理 审稿人 不要博士、大牛 写作要简单 use vs utilize first vs firstly 使用主动语态 尽可能多使用第一人称 使用短句 写简短的段落 Introduction Overview</description>
    </item>
    <item>
      <title>最全的订阅转换项目</title>
      <link>http://localhost:1313/post/subconverter/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/subconverter/</guid>
      <description>前言 目前各个平台的代理软件的格式各不相同，各个服务厂商通常会提供给我们各个软件的订阅链接，但一些比较小的厂商提供的链接有限，或者提供的分流策略组不符合我们的预期，这个时候我们可以通过转换工具转换成我们所用软件的链接格式，或者使用自己修改的策略组实现更加灵活的分流。&#xA;准备工作 部署自己的前后端通常需要自己的域名，部分项目使用 Vercel 托管也可，因此最好准备：&#xA;VPS一台 两个解析的域名，二级域名即可 项目一：subconverter &amp;amp; sub-web subconverter 加 sub-web 是最常用的项目，目前后端仍在更新，并且支持了最新的协议转换。&#xA;项目地址：&#xA;前端：sub-web&#xA;后端：subconverter&#xA;一键脚本安装 网上找到的一键脚本：&#xA;# ubuntu apt-get install -y wget &amp;amp;&amp;amp; wget -O install.sh https://cdn.mxlong.com/install/subweb/install.sh &amp;amp;&amp;amp; chmod +x ./install.sh &amp;amp;&amp;amp; ./install.sh # centos yum install -y wget &amp;amp;&amp;amp; wget -O install.sh https://cdn.mxlong.com/install/subweb/install.sh &amp;amp;&amp;amp; chmod +x ./install.sh &amp;amp;&amp;amp; ./install.sh 脚本中的后端并不是原作者的后端，如有需要可以自行更换脚本中的下载地址。&#xA;手动安装 后端搭建 首先解析一个域名用作后端访问，这里以 backend.domain.com 为例，实际以自己的域名为准。&#xA;连接VPS后，下载并解压后端程序，可以使用如下命令，也可以使用宝塔面板，下载程序后解压。&#xA;cd /opt # 这里是程序安装目录，可以自行更换 wget https://github.com/tindy2013/subconverter/releases/download/v0.9.0/subconverter_linux64.tar.gz tar -zxvf subconverter_linux64.tar.gz 完成以后在 /opt 文件夹下会出现 subconverter文件夹，出现如下结构：</description>
    </item>
    <item>
      <title>宝塔面板部署Bitwarden密码管理</title>
      <link>http://localhost:1313/post/bitwarden/</link>
      <pubDate>Fri, 22 Jul 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/bitwarden/</guid>
      <description>前言 随着网站和程序注册增多，应用密码也难以记住，适用同一个密码存在风险，因此推荐使用密码管理软件，安全且方便，唯一的缺点可能是在别人设备登录，如果密码不能粘贴，输入会比较麻烦。这里推荐使用 Bitwarden 来进行管理，各个平台都有对应的客户端。 Bitwarden 是一款免费开源的密码管理软件，同时官方提供了 docker 镜像，将服务端部署在自己的设备上。Bitwarden 官方 docker 要求服务器内存在 2G 以上，但有大佬使用 Rust 进行重写，项目名为 vaultwarden, 降低了配置要求,地址如下： {% ghcard dani-garcia/vaultwarden, theme=onedark %}&#xA;如果不是特别担心密码安全，还是建议使用官方服务端，自建和官方并没有什么差别&#xA;安装 方法一：宝塔面板配合 Docker 部署 首先安装好宝塔面板并配置好环境，这里采用的是LNMP，PHP 版本7.4，同时创建一个站点，不需要数据库。在软件商店第 3 页 找到 Docker 管理器并安装。&#xA;打开 Docker 管理器，点击 镜像管理，再点击 获取镜像，如果是国内机器可以使用镜像加速：&#xA;&amp;lt;https://docker.mirrors.ustc.edu.cn/&amp;gt; # 也可自行寻找其他地址 然后将以下镜像名称填入输入框：vaultwarden/server，之后点击 获取镜像。&#xA;点击容器列表→创建容器，弹出创建容器界面后按如下填写四部分内容，并修改容器名称：&#xA;容器端口为80 服务器(TCP)端口可以自定义，这里使用6789 服务器目录自定义，这里使用站点目录 容器目录填写/data 内存配额按照自己服务器配置填写 端口映射和目录映射填写完成记得点击 + 添加，否则无效&#xA;方法二：Docker CLI 上述步骤也可直接使用命令安装（前提已安装 docker）&#xA;# 安装 vaultwarden/拉取镜像 docker pull vaultwarden/server:latest # 创建容器 (domain.com 换成自己的网站目录) docker run -d --name vaultwarden -v /www/wwwroot/domain.</description>
    </item>
    <item>
      <title>Windows解除网络限制</title>
      <link>http://localhost:1313/post/windows-network/</link>
      <pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/windows-network/</guid>
      <description>原理解释 了解一下原理有助于软件的使用。不想看也可以直接跳到下一节。以下是非专业人士的理解，如有错误请指出。&#xA;首先需要知道，我们所有的网络活动都是进行数据交换，这些数据存储在服务器上，服务器可以理解为配置很高的电脑。我们浏览网页或者观看视频的过程就是向存储这些内容的服务器发起请求，然后服务器给我们返回内容，就像你要在图书馆看书，告诉管理员我要看哪一本书，然后管理员找到这本书交给你。只是这个过程再稍微复杂一点，也就是我们找书给书的过程需要遵循一定的准则，也就是网络通讯的协议。 目前网络通讯的主要协议为 TCP/IP 协议。为了能让我们能准确拿到想要的东西，所有的计算机设备都会分配一个唯一的IP地址，也就是说IP地址和我们的设备绑定，IP的形式为32位的二进制数，通常被分割为4个“8位二进制数”，用点分十进制表示为 a.b.c.d 的形式，abcd的取值为 0-255 间的十进制整数，以上内容为 IPv4 地址，由于目前IPv4地址快不够用了，所以正在大力发展 IPv6，地址数更多。 IP地址分为公有地址和私有地址，像我们平时路由器使用的地址如 192.168.0.0 就属于私有地址，也就是我们可以用这些地址组件内网，不能从互联网直接访问。留出的私有地址如下：&#xA;A类 10.0.0.0--10.255.255.255 B类 172.16.0.0--172.31.255.255 C类 192.168.0.0--192.168.255.255 当我们访问网页时不可能每次输入一大串数字，因此我们通过一些好记的名称，指代IP地址，当我们输入这些名称时，就自动访问对应的IP，这就是域名。&#xA;比如当我们访问 www.baidu.com，实际上我们访问的是 220.181.38.148。那么我们怎么才能知道那个域名对应的是那个主机呢，这时候就需要一台专门的服务器做这个事情。也就是说你告诉管理员你要看一本书，这时候有一个人我们叫他小明，他告诉管理员你要看的书在哪个书架，管理员知道后再把书拿给你，完成这个流程的服务器叫域名服务器（Domain Name Server，DNS）。&#xA;那么知道这些后我们就能了解 GFW 防火墙简单的阻断方法，比如你说你要看越狱类的书，这时候小明一看你要看这种书？不行，直接给你拦下，或者给告诉管理员一个错误的信息，那么你就看不到你想要的书了。还有一种情况就是小明记住了哪一个书架的书不能看，也就是哪一个服务器上的内容不可以访问，那么发现你要看的书在这里，对不起，也不行。&#xA;那么如何解决呢？防火墙不可能不让你访问所有的服务器内容。这个时候我们可以找一个中间人，即让一台在防火墙外，不在防火墙名单上的服务器访问我们想要的内容，然后我们访问这台服务器，就可以拿到我们想要的东西。这个服务器就是一个代理人的角色，这也就是很多软件里会有的 Proxy 设置，即代理。&#xA;虽说有这种方法，但是如果小明能看到最后书的内容，那还是会被拦下来，因此我们就要对这些信息进行加密，这样他只知道你要看书，并且看的书不在黑名单书架上，内容也不清楚，那么他只能先给你。&#xA;因此就衍生出各种加密方法手段，这些加密方法都要有一定的载体，就像我们把书放在一个盒子里，不同的盒子都可以装书，但是我们的锁不一样。&#xA;总结一下解除限制的原理：以我们访问 YouTube 为例，首先我们本地通过加密发往防火墙外一台服务器，服务器进行解密，然后访问谷歌的服务器，将得到的视频进行加密，最后通过防火墙，我们本地再进行解密。所以我们本地安装的软件只是加密解密的载体，还需要我们的服务器信息才能正常使用，每一台服务器的信息称为一个节点（Node），因为有些服务器会根据IP地址返回不同的内容，比如首页的热门视频等，或者有些网站也会设置防火墙对 IP 地址进行限制，某些国家的 IP 不能访问因此不同的节点访问到的内容也是不一样的。&#xA;目前有很多核心如 Clash, v2ray(xray)，基于这些核心很多开发者做出了图形界面方便我们操作，这些软件都是开源免费的，但真正核心的是服务器节点，有一些公益的，但是不稳定，主要还是收费的节点更稳定一些，提供这些节点的服务商称为 机场。&#xA;另外说一下 VPN，VPN 的初衷不是为了跨过防火墙，而是为了企业的信息安全，因为其加密特征十分明显，很容易被识别，所以如果正常访问谷歌学术或者观看视频不建议使用VPN。&#xA;接下来介绍两个电脑软件的使用，电脑会用后安卓上的操作也异曲同工，而iOS上软件都收费，这里就先不讲。&#xA;v2rayN 此软件使用较为简单，适合简单用途，初上手使用。&#xA;首先下载软件，下载 v2rayN-Core.zip。 这是GUI图形界面和核心，如果下载另一个只有界面，还得再下载核心。 链接点这里&#xA;下载后直接解压，不需要安装，之后打开 v2rayN.exe。&#xA;打开后电脑任务栏右下角会有图标，双击打开界面，界面元素如下：&#xA;点击 订阅-订阅设置 即可添加订阅，添加完成后点击 订阅-更新订阅。&#xA;右击电脑任务栏右下角图标，将 系统代理 后的选项设置为 自动配置系统代理，即可正常使用。&#xA;关闭软件前一定要将系统代理后的选项设置为清除系统代理，然后退出软件，如果不清除只退出软件，会无法访问网络。&#xA;Clash for Windows 此软件适合进阶用户使用，通过使用 策略组，以域名或关键字进行分流，如一些流媒体视频网站使用某个节点，谷歌的服务使用某个节点。</description>
    </item>
    <item>
      <title>Zotero简要使用指南</title>
      <link>http://localhost:1313/post/zotero/</link>
      <pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/zotero/</guid>
      <description>前言： Zotero 是一款文献及知识库管理软件，支持 Windows 、Mac、Linux 全平台，Zotero 词源可能来源于阿尔巴尼亚语动词，意为“掌握（to master）”。软件版本迭代周期较长，但每个版本都有非常实用的功能：&#xA;3.0 版本集成 Word 插件 4.0 版本增加期刊缩写、彩色标签等 5.0 版本 Zotero connector 更好的支持了 Firefox 6.0 版本内置了 PDF 阅读器，注释导出、非英语语法检查等，并且 iOS 端同步上线 具体版本记录可访问官网查看：更新日志&#xA;相比 Endnote、Mendeley、Citavi 等软件有独特得优势，主要有以下特性：&#xA;免费开源，有官方论坛 支持第三方插件 附件支持 Webdav 浏览器插件支持一键导入文献库 集成 Microsoft Word、LibreOffice 等插件，一键导入参考文献 但目前存在一些硬伤：&#xA;同步服务器位于国外，访问很慢 普通账户只有 300MB 的同步空间（可通过Webdav解决） 这里简要介绍一下软件的使用以及部分插件的安装。&#xA;1. 安装 首先需要访问官网下载程序以及图中的浏览器扩展，这样可以在程序打开时一键将条目保存到文献库中，同时建议注册账户使用，这样可以多平台协同工作。&#xA;下载地址：点这里&#xA;安装好插件以及应用后登录账号，连接插件，正常状态如下图红框：&#xA;2. 使用 软件打开后可看到除去菜单功能区外大致分为四个主要区域，如下图：&#xA;2.1 文库分类 Zotero 使用的文库的概念，可以建立文库以及在文库下建立分类，并且可以导出、创建分类报告等，新建只需要点击对应的按钮。&#xA;2.2 条目使用 添加条目有三种主要方式：&#xA;拖拽 PDF 进条目列表区，软件会自动访问 PDF 元数据，找到对应的条目 通过 DOI 添加条目，若存在可用的 PDF 会自动下载，可在上图软件功能分区看到 通过浏览器插件将条目保存入文库 主要介绍一下第三种方式</description>
    </item>
    <item>
      <title>IOS订阅管理软件使用体验</title>
      <link>http://localhost:1313/post/ios-subscription/</link>
      <pubDate>Mon, 11 Oct 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/ios-subscription/</guid>
      <description>前言： 最初在论坛看到一位大佬发帖讨论如何做订阅的笔记，大佬使用 Notion 中 Table 来管理订阅，界面看起来非常美观，自定义程度非常高，同时自留地推荐的一篇少数派文章讲解了一些基础的操作，遂自己折腾了一番，无奈只完成了一小部分。&#xA;之后在网上找到了具体的教程和模板，总的来说体验不错，但是 Notion 中并不能实时跟进汇率来计算金额，所以目前只用 Notion 做简单的记录，使用订阅管理软件进行管理。&#xA;之后对此类软件做了总结，但觉得大部分软件达不到预期，并且几款软件使用过一段时间后也有了新的感受，因此更新了一下文章。&#xA;插一句题外话，虽然订阅制很不喜欢，没有“拥有”的安全感，但是目前来看，订阅制是今后大部分软件的付费模式。&#xA;首先提供一下基本信息&#xA;Bobby Pandora Subsee 订阅通 Stack Subtrack 价格 免费 免费 ￥18 免费 ￥12 ￥6 图标 内置 支持本地图片 支持本地图片 内置 支持 Github 项目 支持图片链接 数据分析 饼图 饼图 柱状图 饼图 文字 文字 多币种 ✅ ✅ ✅ ✅ ✅ ✅ 中文 ❌ ✅ ✅ ✅ ✅ ✅ 小部件 ❌ ❌ ✅ ✅ ✅ ✅ Bobby 网上的推荐这款软件都是首选，内置很多模板，但大都是国外的服务。自定义订阅通过不同的颜色区分。&#xA;免费版可解锁 5 个订阅，之前全部解锁花费 ￥12，现在涨价了，全部需要￥24，单个功能￥6，可解锁字体设置（只有几款选择）、暗色主题和跟随系统选择的主题等，最新版加入了分组功能，可通过顶部按钮切换。</description>
    </item>
    <item>
      <title>Windows10 Office安装指南</title>
      <link>http://localhost:1313/post/office/</link>
      <pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/office/</guid>
      <description>前言 Office 是日常办公必需品，目前新买到的笔记本都会自带正版 Office 2019 家庭中文版，而且只需要拿邮箱激活一次，之后重装电脑只需要登录激活的邮箱账号即可自动激活，这里简单记录一下下载 Office 的步骤。&#xA;使用工具 Office Tool Plus&#xA;Office Tool Plus 基于 Office 部署工具制作，除此之外还集成了各种实用性工具帮助用户部署和管理 Office.&#xA;Office Tool Plus官网&#xA;帮助文档&#xA;步骤 首先下载并解压工具，推荐下载包含框架的版本，不需要安装额外依赖，下载解压后运行文件夹内 RunMe.bat&#xA;选择 部署 按钮，进去后看到如下界面，选择需要安装的版本以及需要安装的应用，如 Word Excel PowerPoint，添加需要安装的语言，之后点击 开始部署 即可开始安装。&#xA;安装完成后登录第一次激活时的 Office 账号即可使用，若没有账号，可使用工具内的激活工具，首先点击主界面的 代码 按钮，然后在红框内输入代码按回车，等待激活结束 /osppilbyid MondoVolume /osppsethst:kms.loli.beer /osppsetprt:1688 /osppact Office Tool Plus 还提供了许多常用工具，可以解决日常使用中的许多问题，工具官方页面也有帮助文档，以及新手教程，自行探索。</description>
    </item>
    <item>
      <title>Typecho博客Handsome主题美化</title>
      <link>http://localhost:1313/post/handsome/</link>
      <pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/handsome/</guid>
      <description>前言 Handsome 是一款精美的 Typecho 主题，后台功能强大，这里记录一下自己从网上找到的对主题的一些美化。&#xA;底部版权信息美化 底部左侧信息 在主题后台设置-开发者设置-博客底部左侧信息添加如下代码：&#xA;&amp;lt;div class=&amp;#34;github-badge&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;./&amp;#34; title=&amp;#34;©2021 XXX&amp;#34;&amp;gt; &amp;lt;span class=&amp;#34;badge-subject&amp;#34;&amp;gt;Copyright&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;#34;badge-value bg-blue&amp;#34;&amp;gt;©2021 XXX&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt; | &amp;lt;div class=&amp;#34;github-badge&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;http://www.beian.gov.cn/&amp;#34; target=&amp;#34;_blank&amp;#34; title=&amp;#34;XICP备 XXXXXXXXXX号&amp;#34;), pointer;&amp;#34;&amp;gt; &amp;lt;span class=&amp;#34;badge-subject&amp;#34;&amp;gt;晋ICP备&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;#34;badge-value bg-green&amp;#34;&amp;gt;XXXXXXXXXX号&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt; 删除对应代码&#xA;# 在 `handsome\component\footer.php` 文件中删除如下代码 by &amp;lt;a target=&amp;#34;blank&amp;#34; href=&amp;#34;https://www.ihewro.com/archives/489/&amp;#34;&amp;gt;handsome&amp;lt;/a&amp;gt; © &amp;lt;?php echo date(&amp;#34;Y&amp;#34;);?&amp;gt; Copyright 底部右侧信息 在主题后台设置-开发者设置-博客底部右侧信息添加如下代码：&#xA;&amp;lt;div class=&amp;#34;github-badge&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;http://www.typecho.org&amp;#34; target=&amp;#34;_blank&amp;#34; title=&amp;#34;由 Typecho 强力驱动&amp;#34;&amp;gt; &amp;lt;span class=&amp;#34;badge-subject&amp;#34;&amp;gt;Powered&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;#34;badge-value bg-blue&amp;#34;&amp;gt;Typecho&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt; | &amp;lt;div class=&amp;#34;github-badge&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;https://www.</description>
    </item>
    <item>
      <title>学习通刷课指南</title>
      <link>http://localhost:1313/post/xuexitong/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/xuexitong/</guid>
      <description>前言： 很多学生需要完成网课的学习，但是这些课程往往很长，而且还会有一些题目，这就需要我们隔几分钟就要看一下页面，阻碍了我们进行快乐的阅读文献，所以这里通过一些脚本插件来解放我们的双手。&#xA;通过插件可以实现：&#xA;自动下一章节 自动答题并提交 视频多倍速播放 ······ 你要知道 使用插件会有不良记录的风险，请自行考虑&#xA;实际播放时间和理论播放时间差距太大会增加风险，尽量不要拖动进度条，或者多倍速播放&#xA;此方法是通过 用户脚本，脚本就是一段代码，可以为网页添加新功能，有些则可以去除广告，提升浏览体验。而管理脚本的插件可以理解为脚本管理器，这里使用的脚本管理器是 Tampermonkey。&#xA;脚本则是在 Greasy Fork 找到。Greasy Fork 上的脚本由众多开发者开发并面向全世界发布，可以免费安装使用。&#xA;有很多人将开源的程序拿来售卖盈利，请尽量多 Google 搜索，避免吃亏&#xA;Tampermonkey 支持的浏览器如下：&#xA;Chrome Microsoft Edge Safari Firefox Opera Next Dolphin Browser UC Browser Chrome 是非常优秀的浏览器，但是碍于国内的上网环境，所以大多数人并不经常使用，但它的兼容性最好，一般情况不会出现问题，所以尽量使用 Chrome。 由于谷歌的插件商店 Webstore 无法直接下载，所以这里主要介绍 Firefox 的方法，Chrome 安装简要介绍。&#xA;Firefox 方法 首先在官网下载浏览器&#xA;官网&#xA;请注意：Firefox 区分国内版和国际版，这里使用国际版&#xA;下载扩展 使用 Tampermonkey ，地址如下&#xA;Tampermonkey&#xA;打开官网这里可以看到管理器支持的浏览器，你用什么浏览器打开，就会在相应的标签下。&#xA;点击下载按键即可下载，一般选择稳定版。按照提示完成安装即可&#xA;下载脚本 打开下载脚本的网站，地址如下&#xA;Greasyfork&#xA;首先搜索插件&#xA;在网站搜索 超星，插件的效果都大同小异，这里选择第一个，下载量较高的。&#xA;点进去后点击 安装此脚本，即可安装成功&#xA;接下来管理脚本，点击右上角的管理器图标即可进入面板，进入后编辑脚本，然后修改脚本参数，调整刷课方式，能修改的参数后面都有清楚的注释。&#xA;修改参数后如果不生效请刷新页面或者重新登陆&#xA;Chrome 方法 首先下载脚本管理器，网站地址同上 → 点这里</description>
    </item>
    <item>
      <title>Windows10常见问题</title>
      <link>http://localhost:1313/post/windows10/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/windows10/</guid>
      <description>删除自带输入法 删除以下注册表&#xA;HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\CTF\\\\TIP {81d4e9c9-1d3b-41bc-9e6c-4b40bf79e35e} Linux + Windows 双系统时间问题 Windows 下以管理员身份打开命令行窗口&#xA;Reg add HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1 解决部分图标加载不出来 在桌面新建文本文档，复制以下代码 rem 关闭Windows外壳程序explorer taskkill /f /im explorer.exe rem 清理系统图标缓存数据库 attrib -h -s -r &amp;#34;%userprofile%\\\\AppData\\\\Local\\\\IconCache.db&amp;#34; del /f &amp;#34;%userprofile%\\\\AppData\\\\Local\\\\IconCache.db&amp;#34; attrib /s /d -h -s -r &amp;#34;%userprofile%\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\Explorer\\\\*&amp;#34; del /f &amp;#34;%userprofile%\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\Explorer\\\\thumbcache_32.db&amp;#34; del /f &amp;#34;%userprofile%\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\Explorer\\\\thumbcache_96.db&amp;#34; del /f &amp;#34;%userprofile%\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\Explorer\\\\thumbcache_102.db&amp;#34; del /f &amp;#34;%userprofile%\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\Explorer\\\\thumbcache_256.db&amp;#34; del /f &amp;#34;%userprofile%\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\Explorer\\\\thumbcache_1024.db&amp;#34; del /f &amp;#34;%userprofile%\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\Explorer\\\\thumbcache_idx.db&amp;#34; del /f &amp;#34;%userprofile%\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\Explorer\\\\thumbcache_sr.db&amp;#34; rem 清理 系统托盘记忆的图标 echo y|reg delete &amp;#34;HKEY_CLASSES_ROOT\\\\Local Settings\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\TrayNotify&amp;#34; /v IconStreams echo y|reg delete &amp;#34;HKEY_CLASSES_ROOT\\\\Local Settings\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\TrayNotify&amp;#34; /v PastIconsStream rem 重启Windows外壳程序explorer start explorer 将 txt 后缀修改为 bat 双击运行 缩放问题 Win10 修改字体大小后，再改回去任务窗口顶栏并不会改变，此时只需要修改缩放为自定义缩放，然后再调整回去即可。</description>
    </item>
    <item>
      <title>Python学习笔记02 面向对象</title>
      <link>http://localhost:1313/post/python02/</link>
      <pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/python02/</guid>
      <description>1. 面向对象 面向对象编程&amp;ndash;Object Oriented Programming，简写 OOP&#xA;面向对象三大特性:&#xA;封装 继承 多态 1.1 基本概念 过程和对象：&#xA;面向过程和面向对象是两种不同编程方式 过程是早期的一个编程概念 过程类似于函数，只能执行，但没有返回值 函数不仅能执行，还可以返回结果 面向过程&#xA;把完成某一需求的所有步骤从头到尾逐步实现 根据开发需求，将某些功能独立的代码封装成一个又一个函数 最后完成的代码就是顺序的调用不同的函数 特点：&#xA;注重步骤与过程，不注重职责分工 如果需求复杂，代 码会变得很复杂 开发复杂项目，没有固定的套路，开发难度很大 面向对象&#xA;相比较函数，面向对象是更大的封装，根据职责在一个对象中封装多个方法&#xA;在完成一个需求前，首先确定职责&amp;ndash;要做的事情（方法） 根据职责确定不同的对象，在对象内部封装不同的方法（多个） 最后完成的代码，就是顺序地让不同的对象调用不同的方法 特点：&#xA;注重对象和职责，不同的对象承担不同的职责 更加适合应对复杂的需求变化，是专门应对复杂项目的开发，有固定的套路 需要在面向过程的基础上，再学习一些面向对象的语法 1.2 类和对象 概念 类(Class)&#xA;类是一群具有相同特征或者行为的事物的一个统称，是抽象的，不能直接使用 特征被称为属性 行为被称为方法 类就相当于制造飞机时的图纸，是一个模板，是负责创建对象的 对象(object)&#xA;对象是由类创建出来的一个具体存在，可以直接使用,又叫实例, 使用类创建对象的过程叫实例化 由哪一个类创建出来的对象，就拥有在哪一个类中定义的： 属性 方法 对象就相当于用图纸制造飞机 类和对象的关系&#xA;类是模板，对象是根据类这个模板创建出来的，应该先有类再有对象 类只有一个，而对象可以有很多个 不同的对象之间属性可能会各不相同 类中定义了什么属性和方法，对象中就有什么属性和方法，不可能多，也不可能少 和概念上下级不同 类是一个特殊的对象&amp;ndash;类对象&#xA;Python 中一切皆对象&#xA;类对象可以拥有自己的:&#xA;类属性 类方法 设计 在使用面向对象开发前，首先应分析需求，确定程序中需要包含哪些类&#xA;设计类的三要素：&#xA;类名：这类事物的名字，满足大驼峰命名法 属性：这类事物具有什么样的特征 方法：这类事物具有什么样的行为 大驼峰命名法&#xA;每一个单词首字母大写 单词与单词间没有下划线 类名的确定 名词提炼法分析整个业务流程，出现的名词，通常就是找到的类</description>
    </item>
    <item>
      <title>VPS常用命令</title>
      <link>http://localhost:1313/post/vps/</link>
      <pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/vps/</guid>
      <description>宝塔面板 # centos yum install -y wget &amp;amp;&amp;amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;amp;&amp;amp; sh install.sh # ubuntu/deepin wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;amp;&amp;amp; sudo bash install.sh # debian wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;amp;&amp;amp; bash install.sh # fedora wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;amp;&amp;amp; bash install.sh # 更新 curl http://download.bt.cn/install/update6.sh|bash # 删除登录验证(适用于 7.8.0 以前版本) sed -i &amp;#34;s|if (bind_user == &amp;#39;True&amp;#39;) {|if (bind_user == &amp;#39;REMOVED&amp;#39;) {|g&amp;#34; /www/server/panel/BTPanel/static/js/index.js rm -rf /www/server/panel/data/bind.pl # 还原绑定 sed -i &amp;#34;s|if (bind_user == &amp;#39;REMOVED&amp;#39;) {|if (bind_user == &amp;#39;True&amp;#39;) {|g&amp;#34; /www/server/panel/BTPanel/static/js/index.</description>
    </item>
    <item>
      <title>Netflix剧集介绍</title>
      <link>http://localhost:1313/post/netflix-info/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/netflix-info/</guid>
      <description>前言 很多朋友很喜欢看 Netflix 的剧集，但是 Netflix 对于 IP 有一定的要求，很多广播 IP 无法访问，连首页都进不去。但是今年可能由于疫情，Netflix 放宽了 IP 审查，大部分广播 IP 都可以看大部分的剧集，但是部分剧集仍无法观看，所以特地详细了解了一下 Netflix 的剧集类型，并对 Netflix做一个简要介绍。&#xA;Netflix 简介 公司简介 Netflix 是一家美国的技术和媒体服务提供商及制作公司，总部位于 California 的 Los Gatos，主要提供流媒体服务，一般简称奈飞。&#xA;Netflix 于1997年在 California 的 Scotts Valley 成立，公司最初的商业模式包括 DVD 销售和邮寄租赁，之后放弃了销售，2007年引入流媒体服务，2013年进入内容制造行业，推出首个系列剧集 House of cards 即 纸牌屋 获得巨大成功。截止到2016年，发行了大约126部原创电视剧和电影。&#xA;如今 Netflix 在全球大部分国家和地区运营，截至2020年4月，Netflix 在全球范围内拥有超过1.93亿付费订阅，美国达7300万。&#xA;特点 Netflix 采用订阅的方式，如果你不付款，根本连首页都无法进去。但是如果你订阅了套餐，你可以享受两个最基本观影体验：&#xA;平台所有视频都可以无障碍播放，不需要各种点播券。 观影全程无广告，不会有各种 VIP 专享广告。 在账户方面，Netflix 也很灵活，有试用阶段，还可以多用户观看。&#xA;Netflix 提供了一个月的免费试用。你可以首先注册一个账户，绑定你的付款卡片，然后你可以随时删除卡片防止扣费，因此市面上出现了很多月抛账户。 最高级的套餐可以创建5个用户，同时4个屏幕同时在线观看。 Netflix上的视频码率很高，有很好的清晰度，720P视频往往比很多服务商所谓的蓝光都要清晰 Chrome 浏览器上最高只有720P的清晰度，但对大部分人来说足够，也可采用插件解锁1080P&#xA;订阅 Netflix 的订阅套餐分为三档，基本、标准、高级，具体内容如下(以美区为例)&#xA;基本 标准 高级 月费 $8.99 $12.99 $15.</description>
    </item>
    <item>
      <title>Python学习笔记01-基础</title>
      <link>http://localhost:1313/post/python01/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/python01/</guid>
      <description>1. 命名和循环 1.1 命名规则 项目：以数字加名称表示&#xA;01_python基础 文件：不能以数字开头，以字母、数字、下划线组合而成&#xA;py_01_python基础.py 1.2 格式化输出 以%表示&#xA;%s #字符串 %d #有符号十进制整数 %f #浮点数 1.3 循环 格式 while条件: 条件满足做的事情1 条件满足做的事情2 ...省略... 1.4 break 和 continue break:某一条件满足时，退出循环，不再执行后续代码 continue:某一条件满足时，不执行后续重复代码 区别:break 退出整个循环，continue 结束本次循环，开始下次循环 如果使用 continue 需要首先确认是否需要对循环计数修改&#xA;2. 循环打印九九乘法表 通过 while 的嵌套实现简单的九九乘法表打印&#xA;2.1 思路 首先定义一个变量控制行，初始值为1，确定行的循环条件 再定义一个变量控制列，始值1，确定列的循环条件&#xA;2.2 代码 row = 1 while row &amp;lt;= 9: col = 1 while col &amp;lt;= row: print(&amp;#34;%d * %d = %d&amp;#34; % (row, col, row*col), end=&amp;#34;\t&amp;#34;) col += 1 print(&amp;#34;&amp;#34;) row += 1 2.</description>
    </item>
    <item>
      <title>2024年Windows下安装Jekyll环境并部署到Vercel</title>
      <link>http://localhost:1313/post/jekyll/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/jekyll/</guid>
      <description>前言 Hexo 的博客虽然外观精美，主题和插件都比较多，但实在是太复杂，更换主题或者更新插件都容易出现错误，所以决定将博客更换为其他框架，最开始决定使用 Hugo，毕竟之前使用过，文档齐全并且速度也够快，但是想用的 Stack 主题没有返回顶部按钮，一些细节不喜欢，文章 Feature 图还得重新做，所以决定使用 Jekyll Chirpy，也图个新鲜。&#xA;基础环境安装 首先根据官网教程安装基础环境，就像 Hugo 下载可执行文件一样，链接在此：RubyInstaller&#xA;下载后使用默认设置安装即可，完成后在终端输入 ruby -v 和 gem -v，出现版本号就代表环境安装成功了。&#xA;接下来安装 Jekyll，终端输入 gem install jekyll，等待安装完成。&#xA;输入 jekyll -v 检查是否安装成功。&#xA;新建站点 这里直接使用的是 Chirpy 主题的方法，文档链接：点此&#xA;首先使用 chirpy-starter 的模板新建一个仓库，我不使用 GitHub Pages 所以仓库名称就随便填写了。&#xA;将仓库拉到本地，然后在仓库跟目录执行下面的命令安装依赖：&#xA;bundle 然后可以使用命令预览一下是否成功：&#xA;bundle exec jekyll s 修改配置 在 _config.yml 中修改对应的配置，社交媒体配置对应的文件为 _data/contact.yml&#xA;依赖错误：tzinfo Windows 下部署时，使用 bundle 安装依赖后不会安装 tzinfo，如果设置了时区，会报错，因此手动安装下面两个依赖：&#xA;gem install tzinfo gem install tzinfo-data 然后在 Gemfile 文件中添加下面两行：&#xA;gem &amp;#39;tzinfo&amp;#39; gem &amp;#34;tzinfo-data&amp;#34;, platforms: [:mingw, :mswin, :x64_mingw, :jruby] 修改 favicon 在 ~/assets/img 下新建 favicons 文件夹，放入自己的 favicons 文件，可以在 favicon.</description>
    </item>
  </channel>
</rss>
