<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>笔记 on Tom&#39;s Blog</title>
    <link>http://localhost:1313/categories/%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in 笔记 on Tom&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <copyright>Tom Almighty</copyright>
    <lastBuildDate>Tue, 01 Aug 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gpower计算效应量</title>
      <link>http://localhost:1313/posts/gpower/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/gpower/</guid>
      <description>Background 在零假设检验 （Null Hypothesis Significant Test, NHST）中四个相互关联的统计量：样本量、效应量、alpha水平和统计功效。这四个变量中，如果我们确定了其中的三个，就可以计算出第四个未知的变量。 样本量，simple size。一些方法学的研究者建议，如果无法确定所研究对象的效应量，那么每个实验条件的观测数目最好大于50（Simmons， 2003）。 效应量，effect size。效应量，表示两个总体分布的重叠程度，反映处理效应大小的度量。如果说P值是判断显著性是还是否的标准，效应量可以视为量化条件间差异或相似程度的指标。有时候，可能两个实验条件之间差异显著，但是实际上效应量很小，这种显著的统计结果也不一定具有现实应用意义。效应量可分为以下三类： 简单效应量。简单效应量通常是效应组与对照组平均值之差。APA(美国心理学会)建议，当简单效应量具有实际的实践意义时(如3个月的运动减肥干预可以减少脂肪多少千克)，可考虑采用简单效应量。 标准化效应量。由于简单效应量受到量纲、整体变异大小等因索限制，不便于研究间的比较。标准化效应量则通过标准化数据解决了这些问题(如Cohen’s d等)。 相关效应量。相关效应量则是指自变量与应变量的相关程度(如决定系数等)，相关研究往往要求报道结果的简单效应量和相关效应量，如在回归方程中应报道决定系数或校正决定系数已成为基本要求. 统计功效或统计检验力，power。统计功效指某检验能够正确地拒绝一个错误的虚无假设的能力，用1-β表示。在实验设计中，power反映了假设检验能够正确检测到真实实验操纵效应的能力。一般而言，根据Cohen的说法，一个统计检验力为0.8及以上的研究才算比较高，所以一般power设置为0.8 (Cohen, 1992). G-power的实际应用 需要进行一个32（被试间被试内）的混合实验设计，已知power=0.8，a=0.05，需要进行F检验，不知道到效应量和样本量。 对于未知的效应量： 如果研究对象已经有元分析，最好使用元分析中报告的效应量。 如果没有元分析，但是有相关的前人研究，可以按照下列教程进行计算具体某个研究的效应量。 如果既没有元分析，也没有前人文献····如果无法确定所研究对象的效应量，那么每个实验条件的观测数目最好大于50（Simmons， 2003）（actually， I am not sure about this suggestion）。 效应量的数量，对于F-test而言，每个统计效应都可以计算出一个对应的效应量，例如A变量主效应，B变量主效应，A*B交互效应以及事后的t检验都存在对应的power analysis。但大家一般并不把所有的功效分析都计算一遍，只聚焦在关键的统计效应上。这一点在计算前人文献效应量和计算事前设计的样本量时都需要注意，务必保持前后所选择的计算对象是一致的。 效应量的类型 在计算效应量之前，需要了解ANOVA分析常见的效应量指标，及其指标之间的转换方法。 方差分析中常见的两类效应量指标就是eta方和f （胡竹菁，2011）。Gpower所采用的效应量指标是f（Cohen, 1977），而SPSS中ANOVA分析报告的效应量指标为偏eta方。 效应量的大小 根据Cohen的建议，f小于0.1为小的效应；f在0.25左右为中等效应；f大于0.4属于大的效应（ Cohen, J., 1988）。0.2的偏eta方对应的效应量f在0.5左右。一般而言，中等和较大的效应量也是可以被接受的，但这仅仅适用于实在找不到前人相似研究的情况。只要前人有类似的研究或元分析，还是要按照前人的结果去计算效应量。 第一步 计算前人已发表文献中的效应量f（如果没有元分析的话） 首先你需要找到与当前研究主题相似的前人研究&#xA;打开G-power，Test family 选择F-tests Statistical test这里,如前所述，同一种ANOVA分析具体也有多种选择。注意选择取决于实验目的。选择最关键的。 Type of power analysis. 这里用不到设置，默认即可。 点击Input Parameters下的Determine，打开具体的计算面板。具体而言，又有三种计算方法： 一种是如果选择的between factors，三种方法都可以使用。可以根据平均值（means）和标准差（SD）进行计算效应量。也可以使用下面两种方法。 From variances 直接使用偏eta方（partial Eta squared）计算效应量f。这个最简单，但是有的研究中没有提供这个指标。 根据前人文献结果部分ANOVA的结果，选择合适的效应量计算方法。输入参数，点击Calculate, 得到这篇研究的ES。 然后，需要从多个相似研究中收集其ES。一般情况，所有找到的研究并不一定会报告同样类型的效应量指标。 收集完之后，需要将不同类型的效应量指标转换为同种类型的效应量指标，如ANOVA的f指标。 转换完之后，计算所有效应量的平均值。计算好的平均值用于后续的功效分析。 第二步 计算事前实验设计的样本量 此时，假设你已经通过元分析或者前人文献得到了效应量的值，那么NHST四个指标已知其3，只有样本量未知。</description>
    </item>
    <item>
      <title>近红外数据分析步骤</title>
      <link>http://localhost:1313/posts/fnirs/</link>
      <pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/fnirs/</guid>
      <description>fNIRS Data Preprocessing使用步骤 本文是近红外数据分析步骤，适用于joint Simon task，使用 宏程序fNIRS Data Preprocessing 以及其他宏程序完成，ETG7100型号设备数据格式为编号_HBA_Probe1_Oxy.csv，编号自定义，最好写成sub001_run1这种形式，命名最好采用单数，即第1对被试为sub01，第2对为sub03，方便后续分割两个被试的数据。&#xA;fNIRS Data Preprocessing 宏程序介绍 程序界面包括三部分，步骤选择、设置、文件列表查看，如下图。&#xA;主要使用步骤为首先选择源数据路径，粘贴进对话框后点击File List查看是否正确，然后在 Type of calculation 选择程序，点击Set 设置，设置无误后点击 Start开始。&#xA;脑内激活（Intra-brain activation） 前面步骤使用 fNIRS Data Preprocessing程序完成，十三步后可使用自定义宏程序。&#xA;Step01. Hitachi 使用 Excel 程序Hitachi更新数据格式&#xA;输入目标文件的路径保存 Oxy 数据，按 File List 按钮 从Type of Calculation中选择Hitachi，按Set按钮 按 Start开始程序 结束后程序不会输出新的文件 Step02. Trigger Check 输入目标文件路径，按 File List 按钮 输入结果文件Trigger.xlsx的保存路径 从Type of Calculation中选择Trigger Check，按Set按钮 按 Start开始程序，对话框中输入 1 结束后程序会输出新的文件 Trigger.xlsx Step03. 格式转换 xlsx to mat 打开 Matlab，路径选择到 Hitachi后的文件路径，左侧出现文件后即成功 输入下列代码转换格式 for i = 1:9 # i代表 sub0 后的数量 这里表示 sub01到 sub09 for j = 1:2 # j 代表run数量，有几个修改一下即可 for k = 1:4 # k 代表 Probe数量，即光极片数量 a = [&amp;#39;sub0&amp;#39;,num2str(i),&amp;#39;_run&amp;#39;, num2str(j),&amp;#39;_HBA_Probe&amp;#39;, num2str(k),&amp;#39;_Oxy.</description>
    </item>
    <item>
      <title>英文论文写作</title>
      <link>http://localhost:1313/posts/thesis-writing/</link>
      <pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/thesis-writing/</guid>
      <description>英文写作最重要：线性写作&#xA;标题 尽量简单，不要花哨 用一个句子 引言 第一段话告诉读者除了结果之外的一切&#xA;第一句话 奶奶名言（motherhood statement）定义一下 为什么研究它 GAP 为什么要填补空白 你的研究问题 第二段 主题句&#xA;主题句要写出来 第三段&#xA;介绍现有的研究 思路回归到研究内容 第四段&#xA;再次讲研究目的和研究方法（参与者、材料和程序） 最后一段&#xA;你期望的结果是什么（假设） 假设和结果一致 方法 研究是否注册 参与者 材料和程序和在一起写 线性写作 有图介绍研究流程和刺激 结果 结果和假设联系 为检验假设做…检验 有图 讨论 第一段&#xA;论文的摘要、目的、如何研究、主要结果是什么 第二段&#xA;第一个重要结果 意义段落&#xA;理论贡献 实际贡献 缺陷段落&#xA;不要写很多 第一个写最大的问题 接下来要做的或已经做的弥补一个缺陷 指出你不会做但应该做的理想研究 结论段落&#xA;重复讨论第一段及研究的意义 最后一句话：奶奶名言 其他要点 翻译 DeepL 最好 其次Google cover letter 为什么希望论文在期刊发表 没有同时审查 伦理 审稿人 不要博士、大牛 写作要简单 use vs utilize first vs firstly 使用主动语态 尽可能多使用第一人称 使用短句 写简短的段落 Introduction Overview</description>
    </item>
    <item>
      <title>Python学习笔记02 面向对象</title>
      <link>http://localhost:1313/posts/python02/</link>
      <pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/python02/</guid>
      <description>1. 面向对象 面向对象编程&amp;ndash;Object Oriented Programming，简写 OOP&#xA;面向对象三大特性:&#xA;封装 继承 多态 1.1 基本概念 过程和对象：&#xA;面向过程和面向对象是两种不同编程方式 过程是早期的一个编程概念 过程类似于函数，只能执行，但没有返回值 函数不仅能执行，还可以返回结果 面向过程&#xA;把完成某一需求的所有步骤从头到尾逐步实现 根据开发需求，将某些功能独立的代码封装成一个又一个函数 最后完成的代码就是顺序的调用不同的函数 特点：&#xA;注重步骤与过程，不注重职责分工 如果需求复杂，代 码会变得很复杂 开发复杂项目，没有固定的套路，开发难度很大 面向对象&#xA;相比较函数，面向对象是更大的封装，根据职责在一个对象中封装多个方法&#xA;在完成一个需求前，首先确定职责&amp;ndash;要做的事情（方法） 根据职责确定不同的对象，在对象内部封装不同的方法（多个） 最后完成的代码，就是顺序地让不同的对象调用不同的方法 特点：&#xA;注重对象和职责，不同的对象承担不同的职责 更加适合应对复杂的需求变化，是专门应对复杂项目的开发，有固定的套路 需要在面向过程的基础上，再学习一些面向对象的语法 1.2 类和对象 概念 类(Class)&#xA;类是一群具有相同特征或者行为的事物的一个统称，是抽象的，不能直接使用 特征被称为属性 行为被称为方法 类就相当于制造飞机时的图纸，是一个模板，是负责创建对象的 对象(object)&#xA;对象是由类创建出来的一个具体存在，可以直接使用,又叫实例, 使用类创建对象的过程叫实例化 由哪一个类创建出来的对象，就拥有在哪一个类中定义的： 属性 方法 对象就相当于用图纸制造飞机 类和对象的关系&#xA;类是模板，对象是根据类这个模板创建出来的，应该先有类再有对象 类只有一个，而对象可以有很多个 不同的对象之间属性可能会各不相同 类中定义了什么属性和方法，对象中就有什么属性和方法，不可能多，也不可能少 和概念上下级不同 类是一个特殊的对象&amp;ndash;类对象&#xA;Python 中一切皆对象&#xA;类对象可以拥有自己的:&#xA;类属性 类方法 设计 在使用面向对象开发前，首先应分析需求，确定程序中需要包含哪些类&#xA;设计类的三要素：&#xA;类名：这类事物的名字，满足大驼峰命名法 属性：这类事物具有什么样的特征 方法：这类事物具有什么样的行为 大驼峰命名法&#xA;每一个单词首字母大写 单词与单词间没有下划线 类名的确定 名词提炼法分析整个业务流程，出现的名词，通常就是找到的类</description>
    </item>
    <item>
      <title>VPS常用命令</title>
      <link>http://localhost:1313/posts/vps/</link>
      <pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/vps/</guid>
      <description>宝塔面板 # centos yum install -y wget &amp;amp;&amp;amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;amp;&amp;amp; sh install.sh # ubuntu/deepin wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;amp;&amp;amp; sudo bash install.sh # debian wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;amp;&amp;amp; bash install.sh # fedora wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;amp;&amp;amp; bash install.sh # 更新 curl http://download.bt.cn/install/update6.sh|bash # 删除登录验证(适用于 7.8.0 以前版本) sed -i &amp;#34;s|if (bind_user == &amp;#39;True&amp;#39;) {|if (bind_user == &amp;#39;REMOVED&amp;#39;) {|g&amp;#34; /www/server/panel/BTPanel/static/js/index.js rm -rf /www/server/panel/data/bind.pl # 还原绑定 sed -i &amp;#34;s|if (bind_user == &amp;#39;REMOVED&amp;#39;) {|if (bind_user == &amp;#39;True&amp;#39;) {|g&amp;#34; /www/server/panel/BTPanel/static/js/index.</description>
    </item>
    <item>
      <title>Python学习笔记01-基础</title>
      <link>http://localhost:1313/posts/python01/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/python01/</guid>
      <description>1. 命名和循环 1.1 命名规则 项目：以数字加名称表示&#xA;01_python基础 文件：不能以数字开头，以字母、数字、下划线组合而成&#xA;py_01_python基础.py 1.2 格式化输出 以%表示&#xA;%s #字符串 %d #有符号十进制整数 %f #浮点数 1.3 循环 格式 while条件: 条件满足做的事情1 条件满足做的事情2 ...省略... 1.4 break 和 continue break:某一条件满足时，退出循环，不再执行后续代码 continue:某一条件满足时，不执行后续重复代码 区别:break 退出整个循环，continue 结束本次循环，开始下次循环 如果使用 continue 需要首先确认是否需要对循环计数修改&#xA;2. 循环打印九九乘法表 通过 while 的嵌套实现简单的九九乘法表打印&#xA;2.1 思路 首先定义一个变量控制行，初始值为1，确定行的循环条件 再定义一个变量控制列，始值1，确定列的循环条件&#xA;2.2 代码 row = 1 while row &amp;lt;= 9: col = 1 while col &amp;lt;= row: print(&amp;#34;%d * %d = %d&amp;#34; % (row, col, row*col), end=&amp;#34;\t&amp;#34;) col += 1 print(&amp;#34;&amp;#34;) row += 1 2.</description>
    </item>
  </channel>
</rss>
