<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>建站 on Tom&#39;s Blog</title>
    <link>http://localhost:1313/categories/%E5%BB%BA%E7%AB%99/</link>
    <description>Recent content in 建站 on Tom&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <copyright>Tom Almighty</copyright>
    <lastBuildDate>Thu, 08 Aug 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/%E5%BB%BA%E7%AB%99/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2024年Windows下安装Jekyll环境并部署到Vercel</title>
      <link>http://localhost:1313/posts/jekyll/</link>
      <pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/jekyll/</guid>
      <description>前言 Hexo 的博客虽然外观精美，主题和插件都比较多，但实在是太复杂，更换主题或者更新插件都容易出现错误，所以决定将博客更换为其他框架，最开始决定使</description>
    </item>
    <item>
      <title>Nginx Proxy Manager：替代宝塔的又一选择</title>
      <link>http://localhost:1313/posts/npm/</link>
      <pubDate>Thu, 09 May 2024 12:14:50 +0000</pubDate>
      <guid>http://localhost:1313/posts/npm/</guid>
      <description>前言 由于低版本的宝塔面板存在漏洞，高版本需要绑定手机，且占用较高，加上自己的服务大多是 Docker 部署，因此直接使用反向代理的面板更加方便。 Nginx Proxy Manager 是一</description>
    </item>
    <item>
      <title>Hexo-Butterfly修改记录</title>
      <link>http://localhost:1313/posts/e1485cce/</link>
      <pubDate>Wed, 08 May 2024 08:46:52 +0000</pubDate>
      <guid>http://localhost:1313/posts/e1485cce/</guid>
      <description>准备 在 [BlogRoot]\source 文件夹下新建一个文件夹 css，该文件夹用于存放自定义的 css 样式，再新建一个名为 custom.css，修改代码存于此处。 在主题配置文件 [BlogRoot]\_config.butterfly.yml</description>
    </item>
    <item>
      <title>PHP获取Bing每日壁纸</title>
      <link>http://localhost:1313/posts/php-bing-api/</link>
      <pubDate>Mon, 06 May 2024 10:40:45 +0000</pubDate>
      <guid>http://localhost:1313/posts/php-bing-api/</guid>
      <description>前言 自建一个 API 获取随机图片可以用于博客 cover，网上找到一篇文章，本文仅记录，所有代码都来自 这篇文章。 部署 新建一个名为 bing.php 的文件，写入下面代</description>
    </item>
    <item>
      <title>自建umami网站统计</title>
      <link>http://localhost:1313/posts/umami/</link>
      <pubDate>Mon, 06 May 2024 10:01:11 +0000</pubDate>
      <guid>http://localhost:1313/posts/umami/</guid>
      <description>前言 Umami 是一款开源的、注重隐私的网站流量统计分析工具，可以方便直观的观察到网站数据，并且不像谷歌统计过多地收集用户的隐私信息，而自建服务可以避</description>
    </item>
    <item>
      <title>使用Windows脚本快速创建文章</title>
      <link>http://localhost:1313/posts/bat-creat-post/</link>
      <pubDate>Tue, 23 Apr 2024 10:43:51 +0000</pubDate>
      <guid>http://localhost:1313/posts/bat-creat-post/</guid>
      <description>前言 Hexo 每次新建文章都需要打开终端-切换目录-创建文章-打开笔记软件-打开新创建的文章。这一套流程不免步骤繁琐，因此尝试使用脚本简化流程。 代码</description>
    </item>
    <item>
      <title>为Hexo博客添加豆瓣观影信息</title>
      <link>http://localhost:1313/posts/hexo-douban/</link>
      <pubDate>Tue, 23 Apr 2024 10:38:35 +0000</pubDate>
      <guid>http://localhost:1313/posts/hexo-douban/</guid>
      <description>前言 通过 hexo-douban 插件可以为自己的博客添加豆瓣观影和读书页面，项目地址如下： {% ghcard mythsman/hexo-douban, theme=onedark%} 安装 首先在站点根目录安装插件： npm install hexo-douban --save 配置 将下面的配置写入站点的</description>
    </item>
    <item>
      <title>Hexo博客Fluid主题修改</title>
      <link>http://localhost:1313/posts/fluid-modify/</link>
      <pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/fluid-modify/</guid>
      <description>前言 记录对于 Hexo 主题 Fluid 的修改，来源于网络。 替换 Mac 风格代码块 在主题文件 themes\fluid\source\css 目录下新建样式文件，如 macpanel.styl，内容参考： .highlight background: #21252b border-radius: 5px box-shadow:</description>
    </item>
    <item>
      <title>Hugo 文章转 Hexo</title>
      <link>http://localhost:1313/posts/993cff99/</link>
      <pubDate>Wed, 17 Apr 2024 10:58:55 +0000</pubDate>
      <guid>http://localhost:1313/posts/993cff99/</guid>
      <description>前言 将博客换成了 Hexo，因此 Front Matter 信息需要修改，使用 ChatGPT 写了一个简单的 Python 更改脚本，修改的项目可以自己更改。 使用 新建一个 Python 文件，写入以下代码，将</description>
    </item>
    <item>
      <title>推一下Vercel加速节点</title>
      <link>http://localhost:1313/posts/vercel-cdn/</link>
      <pubDate>Sun, 24 Mar 2024 18:09:38 +0800</pubDate>
      <guid>http://localhost:1313/posts/vercel-cdn/</guid>
      <description>转载文章，文章来源： 杜老师说 Fgaoxing 博客 写在前面 Vercel 不仅可以部署 Hexo 博客，还能部署很多服务。 境内选择 Vercel 的站长很多，为了提升访问速度，自然选择了距离大陆</description>
    </item>
    <item>
      <title>Hugo Stack主题修改</title>
      <link>http://localhost:1313/posts/stack/</link>
      <pubDate>Thu, 21 Mar 2024 17:13:54 +0800</pubDate>
      <guid>http://localhost:1313/posts/stack/</guid>
      <description>前言 上一篇文章介绍了如何部署 Hugo 博客，这里针对 Stack 主题的修改做一些记录。 准备 首先在博客根目录下的 assets 下创建一个名为 scss 的文件夹，然后在 scss 文件夹里创建</description>
    </item>
    <item>
      <title>使用Hugo搭建个人博客</title>
      <link>http://localhost:1313/posts/hugo-blog/</link>
      <pubDate>Thu, 21 Mar 2024 17:13:32 +0800</pubDate>
      <guid>http://localhost:1313/posts/hugo-blog/</guid>
      <description>前言 博客的引擎选择一直是个问题。动态博客和静态博客各有优劣。动态博客 Wordpress、Typecho 等拥有精美的主题，后台管理也比较方便，</description>
    </item>
    <item>
      <title>Webstack Hugo导航</title>
      <link>http://localhost:1313/posts/webstack-hugo/</link>
      <pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/webstack-hugo/</guid>
      <description>前言 Webstack-Hugo 导航是基于纯静态的网址导航网站 webstack.cc 制作的 Hugo 主题，是一个基于 Hugo 的静态响应式网址导航主题。添加了天气及夜间模式，主要的配置信息都集成到了 co</description>
    </item>
    <item>
      <title>Typora配合PicList快速上传图片并加速 </title>
      <link>http://localhost:1313/posts/piclist/</link>
      <pubDate>Thu, 03 Aug 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/piclist/</guid>
      <description>前言 在Typora写笔记时不免使用图片，这里使用GitHub作图床，配合PicList上传，并通过jsdelivr实现CDN加速。 一. 准备 首</description>
    </item>
    <item>
      <title>Typecho博客Handsome主题美化</title>
      <link>http://localhost:1313/posts/handsome/</link>
      <pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/handsome/</guid>
      <description>前言 Handsome 是一款精美的 Typecho 主题，后台功能强大，这里记录一下自己从网上找到的对主题的一些美化。 底部版权信息美化 底部左侧信息 在主题后台设置-开发者设置</description>
    </item>
  </channel>
</rss>
